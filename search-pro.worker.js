const nt="ENTRIES",V="KEYS",T="VALUES",F="";class D{set;_type;_path;constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case T:return this.value();case V:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const d=o[h-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=u;for(let l=0;l<c.length;++l,++d){const p=c[l],f=i*d,g=f-i;let a=o[f];const m=Math.max(0,d-s-1),y=Math.min(i-1,d+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<a&&(a=L)}if(a>s)continue t}W(e.get(c),t,s,n,o,d,i,r+c)}};class C{_tree;_prefix;_size=void 0;constructor(t=new Map,s=""){this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=O(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=I(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=I(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,V)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},I=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return I(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=O(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=O(e);n.set(o+t,s),n.delete(o)},O=e=>e[e.length-1],it=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},rt=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",q="and",ct="and_not",lt=(e,t)=>{e.includes(t)||e.push(t)},P=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,ht=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,dt={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),P(n.terms,u)}}return e},[q]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);P(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[ct]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},ft=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},H=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},gt=(e,t,s,n)=>{if(!e._index.has(n)){H(e,s,t,n);return}const o=e._index.fetch(n,ht),u=o.get(t);u==null||u.get(s)==null?H(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},mt={k:1.2,b:.7,d:.5},pt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(rt),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},J={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:mt},Ft={combineWith:q,prefix:(e,t,s)=>t===s.length-1},_t={batchSize:1e3,batchWait:10},U={minDirtFactor:.1,minDirtCount:20},yt={..._t,...U},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(dt[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const d=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const a of p.keys()){if(!e._documentIds.has(a)){gt(e,l,a,s),f-=1;continue}const m=i?i(e._documentIds.get(a),s,e._storedFields.get(a)):1;if(!m)continue;const y=p.get(a),_=e._fieldLength.get(a)[l],b=at(y,f,e._documentCount,_,g,r),z=n*d*m*b,A=h.get(a);if(A){A.score+=z,lt(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(a,{score:z,terms:[t],match:{[s]:[c]}})}}return h},At=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((a,m)=>({...a,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:d}={...J.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const a=t.fuzzy===!0?.2:t.fuzzy,m=a<1?Math.min(r,Math.round(t.term.length*a)):a;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[a,m]of f){const y=a.length-t.term.length;if(!y)continue;g==null||g.delete(a);const _=d*a.length/(a.length+.3*y);B(e,t.term,a,_,m,o,u,h,p)}if(g)for(const a of g.keys()){const[m,y]=g.get(a);if(!y)continue;const _=c*a.length/(a.length+y);B(e,t.term,a,_,m,o,u,h,p)}return p},X=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(p=>X(e,p,d));return Y(l,d.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(d=>h(d)).filter(d=>!!d).map(ft(i)).map(d=>At(e,d,i));return Y(c,i.combineWith)},K=(e,t,s={})=>{const n=X(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,d={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(d,e._storedFields.get(u)),(s.filter==null||s.filter(d))&&o.push(d)}return o.sort(G),o},Ct=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of K(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o};class Et{_options;_index;_documentCount;_documentIds;_idToShortId;_fieldIds;_fieldLength;_avgFieldLength;_nextId;_storedFields;_dirtCount;_currentVacuum;_enqueuedVacuum;_enqueuedVacuumConditions;constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?yt:t.autoVacuum;this._options={...pt,...t,autoVacuum:s,searchOptions:{...J,...t.searchOptions||{}},autoSuggestOptions:{...Ft,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=U,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new Et(d);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const a of Object.keys(f)){let m=f[a];c===1&&(m=m.ds),g.set(parseInt(a,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,d=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:d?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,d||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return K(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[d,l]=u.split(/[#@]/),{contents:p}=n[d]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:d,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:d,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const a=i.map(m=>j(g,m)).filter(m=>m!==null);a.length&&p.push([{type:"text",key:d,...c&&{anchor:l},display:a},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=it(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Ct(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":119,\"nextId\":119,\"documentIds\":{\"0\":\"v-184f4da6\",\"1\":\"v-cc04a6e6\",\"2\":\"v-cc04a6e6#标题-2\",\"3\":\"v-cc04a6e6#标题-3\",\"4\":\"v-cc04a6e6@0\",\"5\":\"v-cc04a6e6@1\",\"6\":\"v-c89af5a8\",\"7\":\"v-c89af5a8#标题-2\",\"8\":\"v-c89af5a8#标题-3\",\"9\":\"v-c89af5a8@0\",\"10\":\"v-c89af5a8@1\",\"11\":\"v-c531446a\",\"12\":\"v-c531446a#标题-2\",\"13\":\"v-c531446a#标题-3\",\"14\":\"v-c531446a@0\",\"15\":\"v-c531446a@1\",\"16\":\"v-c1c7932c\",\"17\":\"v-c1c7932c#标题-2\",\"18\":\"v-c1c7932c#标题-3\",\"19\":\"v-c1c7932c@0\",\"20\":\"v-c1c7932c@1\",\"21\":\"v-1473bf53\",\"22\":\"v-1473bf53#目录\",\"23\":\"v-1473bf53@0\",\"24\":\"v-4e65ec78\",\"25\":\"v-4e65ec78@0\",\"26\":\"v-4e65ec78@1\",\"27\":\"v-c151bf32\",\"28\":\"v-c151bf32@0\",\"29\":\"v-c151bf32@1\",\"30\":\"v-438ffe52\",\"31\":\"v-438ffe52#markdown-介绍\",\"32\":\"v-438ffe52#markdown-配置\",\"33\":\"v-438ffe52#markdown-扩展\",\"34\":\"v-438ffe52#vuepress-扩展\",\"35\":\"v-438ffe52#主题扩展\",\"36\":\"v-438ffe52#自定义容器\",\"37\":\"v-438ffe52#代码块\",\"38\":\"v-438ffe52#上下角标\",\"39\":\"v-438ffe52#自定义对齐\",\"40\":\"v-438ffe52#attrs\",\"41\":\"v-438ffe52#脚注\",\"42\":\"v-438ffe52#标记\",\"43\":\"v-438ffe52#任务列表\",\"44\":\"v-438ffe52#图片增强\",\"45\":\"v-438ffe52#卡片\",\"46\":\"v-438ffe52#图表\",\"47\":\"v-438ffe52#echarts\",\"48\":\"v-438ffe52#流程图\",\"49\":\"v-438ffe52#mermaid\",\"50\":\"v-438ffe52#tex-语法\",\"51\":\"v-438ffe52#导入文件\",\"52\":\"v-438ffe52#代码演示\",\"53\":\"v-438ffe52#样式化\",\"54\":\"v-438ffe52#交互演示\",\"55\":\"v-438ffe52#vue-交互演示\",\"56\":\"v-438ffe52#幻灯片\",\"57\":\"v-438ffe52@0\",\"58\":\"v-438ffe52@1\",\"59\":\"v-6e19edb7\",\"60\":\"v-6e19edb7#页面信息\",\"61\":\"v-6e19edb7#页面内容\",\"62\":\"v-6e19edb7#页面结构\",\"63\":\"v-6e19edb7@0\",\"64\":\"v-6e19edb7@1\",\"65\":\"v-433d2831\",\"66\":\"v-433d2831#标题-2\",\"67\":\"v-433d2831#标题-3\",\"68\":\"v-433d2831@0\",\"69\":\"v-433d2831@1\",\"70\":\"v-44f200d0\",\"71\":\"v-44f200d0#标题-2\",\"72\":\"v-44f200d0#标题-3\",\"73\":\"v-44f200d0@0\",\"74\":\"v-44f200d0@1\",\"75\":\"v-46a6d96f\",\"76\":\"v-46a6d96f#标题-2\",\"77\":\"v-46a6d96f#标题-3\",\"78\":\"v-46a6d96f@0\",\"79\":\"v-46a6d96f@1\",\"80\":\"v-485bb20e\",\"81\":\"v-485bb20e#标题-2\",\"82\":\"v-485bb20e#标题-3\",\"83\":\"v-485bb20e@0\",\"84\":\"v-485bb20e@1\",\"85\":\"v-19b8d8ae\",\"86\":\"v-f0383c18\",\"87\":\"v-e1e3da16\",\"88\":\"v-5e4178de\",\"89\":\"v-5e4178de@0\",\"90\":\"v-5e4178de@1\",\"91\":\"v-b46dd46e\",\"92\":\"v-b46dd46e#泛型的概念\",\"93\":\"v-b46dd46e#真的有必要用泛型吗\",\"94\":\"v-b46dd46e#泛型的用法\",\"95\":\"v-b46dd46e#泛型约束\",\"96\":\"v-b46dd46e#默认值\",\"97\":\"v-b46dd46e#泛型函数\",\"98\":\"v-b46dd46e#泛型类\",\"99\":\"v-b46dd46e#泛型接口\",\"100\":\"v-b46dd46e@0\",\"101\":\"v-b46dd46e@1\",\"102\":\"v-bf1c86a8\",\"103\":\"v-bf1c86a8#类型推导-让类型趋于明确\",\"104\":\"v-bf1c86a8#is-关键字\",\"105\":\"v-bf1c86a8#typeof-关键字\",\"106\":\"v-bf1c86a8#in-关键字\",\"107\":\"v-bf1c86a8#instanceof-关键字\",\"108\":\"v-bf1c86a8#总结\",\"109\":\"v-bf1c86a8@0\",\"110\":\"v-bf1c86a8@1\",\"111\":\"v-8fc6b3e2\",\"112\":\"v-8fc6b3e2#什么是鸭子类型\",\"113\":\"v-8fc6b3e2#javascript-里的鸭子类型\",\"114\":\"v-8fc6b3e2#typescript-里的-鸭子类型\",\"115\":\"v-8fc6b3e2@0\",\"116\":\"v-8fc6b3e2@1\",\"117\":\"v-cccd9e0e\",\"118\":\"v-74458d05\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,2],\"1\":[2],\"2\":[2,2],\"3\":[2,2],\"4\":[null,null,2],\"5\":[null,null,3],\"6\":[2,4],\"7\":[2,2],\"8\":[2,2],\"9\":[null,null,2],\"10\":[null,null,3],\"11\":[2],\"12\":[2,2],\"13\":[2,2],\"14\":[null,null,1],\"15\":[null,null,3],\"16\":[2],\"17\":[2,2],\"18\":[2,2],\"19\":[null,null,1],\"20\":[null,null,3],\"21\":[3],\"22\":[1,5],\"23\":[null,null,1],\"24\":[1,18],\"25\":[null,null,1],\"26\":[null,null,1],\"27\":[1,7],\"28\":[null,null,1],\"29\":[null,null,1],\"30\":[2,11],\"31\":[2,8],\"32\":[2,13],\"33\":[2,11],\"34\":[2,10],\"35\":[1,10],\"36\":[1,19],\"37\":[1,1],\"38\":[1,3],\"39\":[1,3],\"40\":[1,5],\"41\":[1,3],\"42\":[1,3],\"43\":[1,5],\"44\":[1,2],\"45\":[1,24],\"46\":[1,1],\"47\":[1,1],\"48\":[1,1],\"49\":[1,1],\"50\":[2,10],\"51\":[1,6],\"52\":[1,1],\"53\":[1,5],\"54\":[1,1],\"55\":[2,1],\"56\":[1,3],\"57\":[null,null,1],\"58\":[null,null,1],\"59\":[1,3],\"60\":[1,20],\"61\":[1,17],\"62\":[1,16],\"63\":[null,null,1],\"64\":[null,null,2],\"65\":[2],\"66\":[2,2],\"67\":[2,2],\"68\":[null,null,1],\"69\":[null,null,3],\"70\":[2,2],\"71\":[2,2],\"72\":[2,2],\"73\":[null,null,1],\"74\":[null,null,3],\"75\":[2],\"76\":[2,2],\"77\":[2,2],\"78\":[null,null,2],\"79\":[null,null,3],\"80\":[2],\"81\":[2,2],\"82\":[2,2],\"83\":[null,null,2],\"84\":[null,null,3],\"85\":[2],\"86\":[2],\"87\":[1],\"88\":[2,31],\"89\":[null,null,1],\"90\":[null,null,2],\"91\":[1,2],\"92\":[1,15],\"93\":[2,96],\"94\":[1],\"95\":[1,56],\"96\":[1,17],\"97\":[1,22],\"98\":[1,27],\"99\":[1,23],\"100\":[null,null,1],\"101\":[null,null,2],\"102\":[2,2],\"103\":[2],\"104\":[2,119],\"105\":[2,51],\"106\":[2,68],\"107\":[2,28],\"108\":[1,42],\"109\":[null,null,1],\"110\":[null,null,2],\"111\":[2],\"112\":[2,19],\"113\":[2,24],\"114\":[4,124],\"115\":[null,null,1],\"116\":[null,null,2],\"117\":[2],\"118\":[1]},\"averageFieldLength\":[1.6086662123315871,10.84368671479258,1.3689762256919686],\"storedFields\":{\"0\":{\"h\":\"介绍页\",\"t\":[\"将你的个人介绍和档案放置在此处。\"]},\"1\":{\"h\":\"香蕉 1\"},\"2\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"3\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"4\":{\"c\":[\"香蕉\",\"水果\"]},\"5\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"6\":{\"h\":\"香蕉 2\",\"t\":[\"一个被数字 10 星标了的香蕉文章。\"]},\"7\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"8\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"9\":{\"c\":[\"香蕉\",\"水果\"]},\"10\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"11\":{\"h\":\"香蕉 3\"},\"12\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"13\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"14\":{\"c\":[\"香蕉\"]},\"15\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"16\":{\"h\":\"香蕉 4\"},\"17\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"18\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"19\":{\"c\":[\"香蕉\"]},\"20\":{\"c\":[\"黄\",\"弯曲的\",\"长\"]},\"21\":{\"h\":\"站点功能备忘(自用)\"},\"22\":{\"h\":\"目录\",\"t\":[\"Markdown 展示\",\"页面展示\",\"禁用展示\",\"加密展示\"]},\"23\":{\"c\":[\"使用指南\"]},\"24\":{\"h\":\"布局与功能禁用\",\"t\":[\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\",\"本页面就是一个示例，禁用了如下功能:\",\"导航栏\",\"侧边栏\",\"路径导航\",\"页面信息\",\"贡献者\",\"编辑此页链接\",\"更新时间\",\"上一篇/下一篇 链接\",\"评论\",\"页脚\",\"返回顶部按钮\"]},\"25\":{\"c\":[\"使用指南\"]},\"26\":{\"c\":[\"禁用\"]},\"27\":{\"h\":\"密码加密的文章\",\"t\":[\"实际的文章内容。\",\"段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。\",\"段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。\"]},\"28\":{\"c\":[\"使用指南\"]},\"29\":{\"c\":[\"文章加密\"]},\"30\":{\"h\":\"Markdown 展示\",\"t\":[\"VuePress 主要从 Markdown 文件生成页面。因此，你可以使用它轻松生成文档或博客站点。\",\"你应该创建和编写 Markdown 文件，以便 VuePress 可以根据文件结构将它们转换为不同的页面。\"]},\"31\":{\"h\":\"Markdown 介绍\",\"t\":[\"如果你是一个新手，还不会编写 Markdown，请先阅读 Markdown 介绍 和 Markdown 演示。\"]},\"32\":{\"h\":\"Markdown 配置\",\"t\":[\"VuePress 通过 Frontmatter 为每个 Markdown 页面引入配置。\",\"相关信息\",\"Frontmatter 是 VuePress 中很重要的一个概念，如果你不了解它，你需要阅读 Frontmatter 介绍。\"]},\"33\":{\"h\":\"Markdown 扩展\",\"t\":[\"VuePress 会使用 markdown-it 来解析 Markdown 内容，因此可以借助于 markdown-it 插件来实现 语法扩展 。\"]},\"34\":{\"h\":\"VuePress 扩展\",\"t\":[\"为了丰富文档写作，VuePress 对 Markdown 语法进行了扩展。\",\"关于这些扩展，请阅读 VuePress 中的 Markdown 扩展。\"]},\"35\":{\"h\":\"主题扩展\",\"t\":[\"通过 vuepress-plugin-md-enhance，主题扩展了更多 Markdown 语法，提供更加丰富的写作功能。\"]},\"36\":{\"h\":\"自定义容器\",\"t\":[\"安全的在 Markdown 中使用 {{ variable }}。\",\"自定义标题\",\"信息容器，包含 代码 与 链接。\",\"const a = 1; \",\"自定义标题\",\"提示容器\",\"自定义标题\",\"警告容器\",\"自定义标题\",\"危险容器\",\"自定义标题\",\"详情容器\",\"查看详情\"]},\"37\":{\"h\":\"代码块\",\"t\":[\"查看详情\"]},\"38\":{\"h\":\"上下角标\",\"t\":[\"19th H2O\",\"查看详情\"]},\"39\":{\"h\":\"自定义对齐\",\"t\":[\"我是居中的\",\"我在右对齐\",\"查看详情\"]},\"40\":{\"h\":\"Attrs\",\"t\":[\"一个拥有 ID 的 单词。\",\"查看详情\"]},\"41\":{\"h\":\"脚注\",\"t\":[\"此文字有脚注[1].\",\"查看详情\"]},\"42\":{\"h\":\"标记\",\"t\":[\"你可以标记 重要的内容 。\",\"查看详情\"]},\"43\":{\"h\":\"任务列表\",\"t\":[\" 计划 1\",\" 计划 2\",\"查看详情\"]},\"44\":{\"h\":\"图片增强\",\"t\":[\"支持为图片设置颜色模式和大小\",\"查看详情\"]},\"45\":{\"h\":\"卡片\",\"t\":[\"title: Mr.Hope desc: Where there is light, there is hope logo: https://mister-hope.com/logo2.jpg link: https://mister-hope.com color: rgba(253, 230, 138, 0.15) \",\"查看详情\"]},\"46\":{\"h\":\"图表\",\"t\":[\"查看详情\"]},\"47\":{\"h\":\"Echarts\",\"t\":[\"查看详情\"]},\"48\":{\"h\":\"流程图\",\"t\":[\"查看详情\"]},\"49\":{\"h\":\"Mermaid\",\"t\":[\"查看详情\"]},\"50\":{\"h\":\"Tex 语法\",\"t\":[\"∂ωr∂r​(ωyω​)=(ωyω​){(logy)r+i=1∑r​ωi(−1)ir⋯(r−i+1)(logy)r−i​}\",\"查看详情\"]},\"51\":{\"h\":\"导入文件\",\"t\":[\"Markdown 展示\",\"页面展示\",\"禁用展示\",\"加密展示\",\"查看详情\"]},\"52\":{\"h\":\"代码演示\",\"t\":[\"查看详情\"]},\"53\":{\"h\":\"样式化\",\"t\":[\"向 Mr.Hope 捐赠一杯咖啡。 \",\"查看详情\"]},\"54\":{\"h\":\"交互演示\",\"t\":[\"查看详情\"]},\"55\":{\"h\":\"Vue 交互演示\",\"t\":[\"查看详情\"]},\"56\":{\"h\":\"幻灯片\",\"t\":[\"查看详情\",\"这是脚注内容 ↩︎\"]},\"57\":{\"c\":[\"使用指南\"]},\"58\":{\"c\":[\"Markdown\"]},\"59\":{\"h\":\"页面配置\",\"t\":[\"more 注释之前的内容被视为文章摘要。\"]},\"60\":{\"h\":\"页面信息\",\"t\":[\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\",\"作者设置为 Ms.Hope。\",\"写作日期为 2020 年 1 月 1 日\",\"分类为 “使用指南”\",\"标签为 “页面配置” 和 “使用指南”\"]},\"61\":{\"h\":\"页面内容\",\"t\":[\"你可以自由在这里书写你的 Markdown。\",\"提示\",\"你可以将图片和 Markdown 文件放置在一起，但是你需要使用相对链接./ 进行引用。\",\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\",\"主题包含了一个自定义徽章可以使用:\",\"文字结尾应该有深蓝色的 徽章文字 徽章。 \"]},\"62\":{\"h\":\"页面结构\",\"t\":[\"此页面应当包含:\",\"路径导航\",\"标题和页面信息\",\"TOC (文章标题列表)\",\"贡献者、更新时间等页面元信息\",\"评论\",\"导航栏\",\"侧边栏\",\"页脚\",\"返回顶部按钮\",\"你可以通过主题选项和页面 Frontmatter 自定义它们。\"]},\"63\":{\"c\":[\"使用指南\"]},\"64\":{\"c\":[\"页面配置\",\"使用指南\"]},\"65\":{\"h\":\"苹果 1\"},\"66\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"67\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"68\":{\"c\":[\"苹果\"]},\"69\":{\"c\":[\"红\",\"大\",\"圆\"]},\"70\":{\"h\":\"苹果 2\",\"t\":[\"一个被星标了的苹果文章。\"]},\"71\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"72\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"73\":{\"c\":[\"苹果\"]},\"74\":{\"c\":[\"红\",\"大\",\"圆\"]},\"75\":{\"h\":\"苹果 3\"},\"76\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"77\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"78\":{\"c\":[\"苹果\",\"水果\"]},\"79\":{\"c\":[\"红\",\"大\",\"圆\"]},\"80\":{\"h\":\"苹果 4\"},\"81\":{\"h\":\"标题 2\",\"t\":[\"这里是内容。\"]},\"82\":{\"h\":\"标题 3\",\"t\":[\"这里是内容。\"]},\"83\":{\"c\":[\"苹果\",\"水果\"]},\"84\":{\"c\":[\"红\",\"大\",\"圆\"]},\"85\":{\"h\":\"JavaScript 系列\"},\"86\":{\"h\":\"Linux 系列\"},\"87\":{\"h\":\"读后记\"},\"88\":{\"h\":\"TypeScript 系列\",\"t\":[\"TypeScript 这些年越来越火，可以说是前端工程师的必备技能了。软件开发设计公司 The Software House 针对 2022 年前端市场状态的调查显示，84% 的受访者都在使用 TypeScript，43% 的受访者甚至认为 TypeScript 将超越 JavaScript 成为前端开发的主要语言。\",\"无论 TypeScript 是否会超越 JavaScript，可以肯定的是，TypeScript 已被开发人员普遍接受，和 ES6 语法以及前端框架一起，被视为前端开发领域的基础工具。所以学习如何使用 TypeScript 变得非常重要。\",\"这个系列我将会跟您一起由浅入深，深入学习 TypeScript 。\",\"- 类型推导，让类型趋于明确\"]},\"89\":{\"c\":[\"TypeScript\"]},\"90\":{\"c\":[\"TypeScript\",\"进阶\"]},\"91\":{\"h\":\"初探泛型\",\"t\":[\"more 本章讲解泛型基本知识\"]},\"92\":{\"h\":\"泛型的概念\",\"t\":[\"TypeScript 中的泛型是一种强大的工具，它允许您在定义函数、类或接口时不指定具体的数据类型，而是将类型作为参数传递，以在使用时确定具体的类型。泛型使您能够编写更通用、可复用的代码，同时保持类型安全性。\",\"泛型的概念可以类比为参数化类型，就像函数可以接受参数一样，泛型允许您传递类型作为参数。\",\"这段概念真的太空了不是吗？真的有人会靠这玩意学东西？\"]},\"93\":{\"h\":\"真的有必要用泛型吗？\",\"t\":[\"还是让我们从实际应用场景开始学习。\",\"场景：你有一个用于更新用户信息的 Dialog，但现在你手中只有以下类型以及代码\",\"type User { name: string, age: number, sex: 'man'|'woman', ... } export function updateUserInfo(updateParams: '这里填写什么类型好呢') { return request.post({ url: LoginAPI.updateUserInfo, data: params }); } \",\"这里填写什么类型好呢?\",\"如果填写 User，那么更新时会要求UserInfo所有属性都应该存在。而实际上用户只会更新想更新的那部分信息。你也不应该在更新时发送所有的用户信息，即使有些信息是没有改变的。\",\"const updateParams = { age:20 // 想这样 } \",\"那怎么办？哑巴吃黄连，为了完成这个目的，你只能创建一个新的类型，用于更新数据。\",\"type UpdateUser { name?: string, age?: number, sex?: 'man'|'woman', ... } \",\"同时也庆幸这个类型的属性比较少，不然打可选符需要花费一天的时间。但是每次都有这么幸运么。。。。\",\"随后你了解到 TypeScript 的内置工具类型 Partial。工具类型 Partial 会将传入的对象类型复制一份，但会额外添加一个?\",\"一句简简单单的type UpdateUser = Partial<User>;就解决了上述问题。\",\"为了一探究竟，您点开了 Partial 工具类型实现\",\"type Partial<T> = { [P in keyof T]?: T[P]; }; \",\"随着一声苦笑，顿时就明白了泛型的重要性，这段代码太简单了。\",\"Partial<T>：这是一个泛型类型的定义，表示将传入的类型 T 的属性都转换为可选属性。\",\"[P in keyof T]?：这是一个映射类型的语法，它表示对类型 T 的每个属性 P 进行遍历。keyof T 是 TypeScript 中的索引类型查询操作符，用于获取类型 T 的所有属性名称。\",\"T[P]：表示属性 P 在类型 T 中的类型。\",\"?:：这是 TypeScript 中的可选属性语法，表示属性可以不必存在。\",\"所以，当你使用 Partial<T> 类型时，它会将传入的类型 T 的每个属性变为可选属性，从而创建一个新的类型，该类型的每个属性都可以不设置或设置为 undefined。\",\"这也是泛型那段枯燥无味的概念想要告诉你的：泛型使您能够编写更通用、可复用的代码，同时保持类型安全性。\"]},\"94\":{\"h\":\"泛型的用法\"},\"95\":{\"h\":\"泛型约束\",\"t\":[\"使用 extends 关键字限制泛型参数的类型范围，确保传递的值满足某些条件。\",\"场景一：如果您需要在应用中处理多个具有类似属性的对象。比如在处理字符串和数组时，经常需要获取它们的长度。但他们明显不允许被推导为同一类型。就可以采用以下方法\",\"function getLength<T extends { length: number }>(value: T): number { return value.length; } const stringLength = getLength(\\\"Hello\\\"); // stringLength 是 5 const arrayLength = getLength([1, 2, 3]); // arrayLength 是 3 \",\"场景二：有时向后端请求数据时会返回请求状态码，通常为数字字面量集合。这时我们通过 extends number 来标明其类型约束，如果传入一个不合法的值，就会出现类型错误\",\"type ResStatus<ResCode extends number> = ResCode extends 10000 | 10001 | 10002 ? 'success' : 'failure'; type Res1 = ResStatus<10000>; // \\\"success\\\" type Res2 = ResStatus<20000>; // \\\"failure\\\" type Res3 = ResStatus<'10000'>; // 类型“string”不满足约束“number”。 \"]},\"96\":{\"h\":\"默认值\",\"t\":[\"它可以像函数可以声明一个参数的默认值一样，泛型同样有着默认值的设定\",\"type Factory<T = boolean> = T | number | string; \",\"这样在你调用时就可以不带任何参数了，默认会使用声明的默认值来填充。\",\"const foo: Factory = false; \"]},\"97\":{\"h\":\"泛型函数\",\"t\":[\"function identity<T>(arg: T): T { return arg; } const result = identity(\\\"Hello, TypeScript\\\"); // result 的类型为 string \",\"在上面的例子中，<T> 表示泛型参数，可以传递任意类型。函数 identity 接受一个参数 arg，并将其返回，保持了输入和输出的类型一致。\"]},\"98\":{\"h\":\"泛型类\",\"t\":[\"class Box<T> { value: T; constructor(value: T) { this.value = value; } } const numberBox = new Box<number>(42); // numberBox 的 value 是 number 类型 const stringBox = new Box<string>(\\\"Hello\\\"); // stringBox 的 value 是 string 类型 \",\"在这个例子中，Box 是一个泛型类，它可以接受任意类型的值，并将其保存在 value 属性中。\"]},\"99\":{\"h\":\"泛型接口\",\"t\":[\"interface Pair<T, U> { first: T; second: U; } const pair: Pair<number, string> = { first: 42, second: \\\"hello\\\" }; \",\"泛型接口允许您定义一个可以适用于多个类型的接口，可以在创建对象时指定具体的类型参数。\",\"希望您注意的是，不要为了用泛型而用泛型，一切为了降低自身的心智模型负担！帮助 TypeScript 获取更好的类型推导只是其中的一个方式而已。\"]},\"100\":{\"c\":[\"TypeScript\"]},\"101\":{\"c\":[\"TypeScript\",\"进阶\"]},\"102\":{\"h\":\"类型推导，让类型趋于明确\",\"t\":[\"more 本章讲解类型推导\"]},\"103\":{\"h\":\"类型推导，让类型趋于明确\"},\"104\":{\"h\":\"is 关键字\",\"t\":[\"刚接触 TypeScript 的朋友可能时常遇到问题如，你不能将 XXX 类型赋予 YYY。或者 Property 'x属性' does not exist on type 'YYY' 的报错。\",\"function foo(input: string | number) { input.length; // 错误代码 } \",\"这是因为在 TypeScript 中，当一个变量的类型被确定后，TypeScript 将会基于这个类型来做类型检查和类型推断。然而，在某些情况下，TypeScript 可能无法精确地确定变量的类型。\",\"这时你可能需要显式地告诉 TypeScript 变量的实际类型\",\"这就是类型推导,通过使用 typeof 检查，你可以在代码中显式地告诉 TypeScript，例如当变量的类型是 string 时，可以安全地访问 length 属性。这样，TypeScript 就能够根据你的断言，正确地进行类型推断和类型检查，避免出现错误。\",\"declare const strOrNumOrBool: string | number | boolean; if (typeof strOrNumOrBool === \\\"string\\\") { // 一定是字符串！ strOrNumOrBool.charAt(1); } else if (typeof strOrNumOrBool === \\\"number\\\") { // 一定是数字！ strOrNumOrBool.toFixed(); } else if (typeof strOrNumOrBool === \\\"boolean\\\") { // 一定是布尔值！ strOrNumOrBool === true; } else { // 要是走到这里就说明有问题！ const _exhaustiveCheck: never = strOrNumOrBool; throw new Error(`Unknown input type: ${_exhaustiveCheck}`); } \",\"上述类型推导的简单应用可以应付一部分使用场景，但这不能发挥类型推导的全部功能。\",\"场景：您需要判断一个值是否为真/假值\",\"从简单应用的角度出发似乎你需要\",\"if ( input === false || input === \\\"\\\" || input === 0 || input === null || input === undefined ) { //逻辑 } \",\"看起来难以扩展、且不太优雅不是吗？所以直觉告诉您需要将判断逻辑封装起来提取到函数外部进行复用。\",\"于是您写出了这一段代码\",\"function isFalsy(input: unknown): boolean { return ( input === false || input === \\\"\\\" || input === 0 || input === null || input === undefined ); } declare const input: unknown; if (!isFalsy(input)) { input; // 此时鼠标指向input 发现静态推导出的类型是 unknown } \",\"看起来不太妙！ 他根本就没起到任何约束作用。原来 TypeScript 中类型推导分析做不到跨函数上下文来进行类型的信息收集。\",\"TypeScript 引入了 is 关键字来显式地提供类型信息。你可以通过is 关键字 + 预期类型来帮助类型推导\",\"function isFalsy(input: unknown): input is boolean { return !( input === false || input === \\\"\\\" || input === 0 || input === null || input === undefined ); } declare const input: unknown; if (isFalsy(input)) { Boolean(input); // 此时鼠标指向input 发现静态推导出的类型是 boolean } \",\"需要注意的是 is 关键字相关的类型推导将会无比信任你的设置。\",\"例：以下的一段代码 return 的判断逻辑不会改变以进入 if(isString(input))条件分支里 input 的类型。你会得到一个\",\"通过了typeof input === \\\"string\\\"，但类型是 number 的分支环境。\",\"function isString(input: unknown): input is number { return typeof input === \\\"string\\\"; } function foo(input: string | number) { if (isString(input)) { input.replace(\\\"linbudu\\\", \\\"linbudu599\\\"); // Property 'replace' does not exist on type 'number'. } } \"]},\"105\":{\"h\":\"typeof 关键字\",\"t\":[\"JavaScript 中的 typeof：\",\"在 JavaScript 中，typeof 返回一个字符串，表示操作数的基本类型。例如：\",\"javascriptCopy codeconsole.log(typeof \\\"Hello\\\"); // 输出: \\\"string\\\" console.log(typeof 42); // 输出: \\\"number\\\" console.log(typeof true); // 输出: \\\"boolean\\\" \",\"TypeScript 中的 typeof：\",\"在 TypeScript 中，typeof 用于类型检查和类型推断。它可以用于获取变量的静态类型，也可以用于判断变量的实际类型。例如：\",\"typescriptCopy codeconst str = \\\"Hello\\\"; const num = 42; let strType: typeof str; // 类型推断：strType 的类型为 \\\"string\\\" let numType: typeof num; // 类型推断：numType 的类型为 \\\"number\\\" \",\"此外，TypeScript 的 typeof 还支持类型保护，用于缩小联合类型的范围，从而在不同分支中得到不同的类型推断。\",\"typescriptCopy codefunction printLength(input: string | number) { if (typeof input === \\\"string\\\") { console.log(input.length); // 在这里，input 被 TypeScript 推断为 \\\"string\\\" 类型 } } \"]},\"106\":{\"h\":\"in 关键字\",\"t\":[\"in和typeof有着很奇妙的共同点，他们都并不是 TypeScript 中新增的概念，而是 JavaScript 中已有的部分。您在从 js 迁移到 ts 时。会觉得这种使用方式是很符合直觉的，这里也不做过多介绍。简单说一下他如何做到类型推导作用。\",\"首先我么回想一下 in 的作用\",\"in 操作符用于检查一个对象是否具有特定属性。它返回一个布尔值，表示属性是否存在于对象中。 \",\"在 JavaScript 里，我们会这样使用。\",\"const myObject = { name: \\\"John\\\", age: 30 }; console.log(\\\"name\\\" in myObject); // 输出: true console.log(\\\"gender\\\" in myObject); // 输出: false \",\"而在 TypeScript 中，in 操作符不仅可以用来检查属性是否存在，还可以用来进行类型推导、缩小联合类型的范围，从而更精确地推断变量的类型。而能让其发挥作用的，仅仅是一或多个可辨识属性（Discriminant Property 或 Tagged Property）。\",\"interface Person { name: string; age: number; } function printInfo(person: Person | string) { if (\\\"name\\\" in person) { // 在这里，TypeScript 推断 person 为 Person 类型 console.log(`Name: ${person.name}, Age: ${person.age}`); } else { // 在这里，TypeScript 推断 person 为 string 类型 console.log(`Name: ${person}`); } } \"]},\"107\":{\"h\":\"instanceof 关键字\",\"t\":[\"和前面两个‘前辈’ 一样，这里就不过多赘述了。\",\"class Person { name: string; constructor(name: string) { this.name = name; } } class Animal { species: string; constructor(species: string) { this.species = species; } } function printNameOrSpecies(obj: Person | Animal) { if (obj instanceof Person) { console.log(obj.name); // 在这里，TypeScript 推断 obj 为 Person 类型 } else if (obj instanceof Animal) { console.log(obj.species); // 在这里，TypeScript 推断 obj 为 Animal 类型 } } \"]},\"108\":{\"h\":\"总结\",\"t\":[\"is 关键字\",\"is 关键字不是 TypeScript 中的原生关键字，但您在代码中使用 is 来结合类型守卫，可以在条件分支中明确地告诉 TypeScript 一个变量的具体类型。这有助于在特定分支中进行精确的类型推断和类型检查。\",\"typeof 关键字\",\"typeof 关键字用于获取变量的数据类型，并且在 TypeScript 中可以用于类型检查和类型推断。您可以使用 typeof 关键字来获取变量的静态类型，或者用它来结合条件语句实现类型保护，缩小联合类型的范围，从而获得更准确的类型推断。\",\"in 关键字\",\"in 关键字用于检查对象是否具有特定属性。在 TypeScript 中，您可以使用 in 关键字结合可辨识属性（Discriminant Property 或 Tagged Property）来进行类型推断，缩小联合类型的范围，从而根据属性的存在与否进行精确的类型判断。\",\"instanceof 关键字\",\"instanceof 关键字用于检查对象是否是某个构造函数（或其派生构造函数）的实例。在 TypeScript 中，您可以使用 instanceof 关键字结合类型保护来进行更精确的类型推断，根据对象的实例关系判断变量的具体类型。\",\"总的来说，这些关键字和技术在 TypeScript 中被用于不同的情境，可以帮助您在编写代码时实现更准确的类型推导和类型检查，从而提高代码质量和可维护性。\"]},\"109\":{\"c\":[\"TypeScript\"]},\"110\":{\"c\":[\"TypeScript\",\"进阶\"]},\"111\":{\"h\":\"阴魂不散的鸭子类型 ？\"},\"112\":{\"h\":\"什么是鸭子类型？\",\"t\":[\"鸭子类型（Duck Typing）是一种动态类型语言的概念，它强调对象的行为（方法和属性）比实际类型更重要。鸭子类型的基本思想是，只要一个对象具有与所需的操作相匹配的方法和属性，那么它就可以被视为符合所需的类型，即使它的实际类型并不相同。\",\"鸭子类型的名字来自于一句俚语：“如果它走起路来像只鸭子，叫起声来也像只鸭子，那么它就是只鸭子。”这句话强调的是，对象的行为决定了它的类型，而不是继承关系或显式的类型声明。\"]},\"113\":{\"h\":\"JavaScript 里的鸭子类型\",\"t\":[\"从 JavaScript 迁移的小伙伴都知道在 JavaScript 中，如果一个对象具有与所需操作相匹配的方法和属性，那么它就可以被视为符合所需的类型，即使它的实际类型并不相同。\",\"// 鸭子类型示例 function quack(duck) { if (duck && typeof duck.quack === \\\"function\\\") { duck.quack(); } } const realDuck = { quack: function () { console.log(\\\"Quack!\\\"); }, }; const toyDuck = { quack: function () { console.log(\\\"Squeak!\\\"); }, }; quack(realDuck); // 输出: \\\"Quack!\\\" quack(toyDuck); // 输出: \\\"Squeak!\\\" \"]},\"114\":{\"h\":\"TypeScript 里的 \\\" 鸭子类型 \\\"\",\"t\":[\"但对于特殊的 TypeScript 来说，直觉告诉你这是一段不对的代码。\",\"class realDuck { quack() {} } class toyDuck { quack() {} } function quack(duck: realDuck) {} quack(new toyDuck()); \",\"然而当这段代码进入 IDE ，你得到的仅仅只是一句'duck' is declared but its value is never read.。没有类型错误 & 爆红。有的只是一脸懵逼的你。\",\"这时的你回想起在 类型推导，让类型趋于明确 一章中 in 关键字起到类型推导作用的核心是可辨识属性（Discriminant Property 或 Tagged Property）。没错，这里也侧面印证了 TypeScript 并非像 Java 和 C# 使用标称类型系统，而是采用的结构化类型系统。\",\"所以要让 duck: realDuck 这段类型限制起作用也很简单：\",\"class realDuck { quack() {} eat() {} // 加一个 可辨识属性 就好啦 } class toyDuck { quack() {} } function quack(duck: realDuck) {} quack(new toyDuck()); // 类型不匹配 \",\"不过这里又会涉及到另一种情况 ( 都是加可辨识属性，加哪不是加？)：\",\"class realDuck { quack() {} } class toyDuck { quack() {} engine() {} //加可辨识属性 } function quack(duck: realDuck) {} quack(new toyDuck()); // 类型匹配 √ \",\"这时的 toyDuck 会被认为是 realDuck 的子类，前者继承了后者并增加了一个方法。而 TypeScript 也遵循 里氏替换原则（Liskov Substitution Principle，LSP）即如果 S 是 T 的一个子类型，那么类型 T 的对象可以被类型 S 的对象替换（或者说可以使用类型 S 的对象代替类型 T 的对象），而不需要影响程序的正确性。\",\"**最后你需要注意的是，在比较对象类型的属性与方法时，同样存在类型的兼容性比较。**他不像 JavaScript 一样，你只要能鸭叫出声就行。他还需要你能发出同一品种的叫声\",\"class realDuck { quack(): boolean { return true; } } class toyDuck { quack(): number { return 3; } } function quack(duck: realDuck) {} quack(new toyDuck()); // 类型匹配 × \",\"这里短暂科普以下两者的区别：\",\"标称类型系统（Nominal Type System）：\",\"在标称类型系统中，类型的相等性和兼容性是基于类型的名称或标识符来判断的。即使两个类型的结构相同，但如果它们的名称不同，它们仍被视为不同的类型。这意味着只有显式声明为相同名称的类型才被认为是相等的。\",\"结构化类型系统（Structural Type System）：\",\"在结构化类型系统中，类型的相等性和兼容性是基于类型的结构和成员来判断的。如果两个类型具有相同的属性和方法，即使它们的名称不同，它们仍被视为相同的类型。这意味着可以更灵活地处理不同名称的类型，只要它们的结构相似。\",\"如果同学有心去尝试realDuck & toyDuck代码在 Java 中，会得到根据标称类型系统的原则，代码中的 quack(new toyDuck()); 是不成立的。因为 quack 函数期望接受一个参数类型为 realDuck 的对象，而传递给它的是一个类型为 toyDuck 的对象，两者的类型不匹配。这样一个结论\"]},\"115\":{\"c\":[\"TypeScript\"]},\"116\":{\"c\":[\"TypeScript\",\"进阶\"]},\"117\":{\"h\":\"Vue 系列\"},\"118\":{\"h\":\"Css\"}},\"dirtCount\":0,\"index\":[[\"两者的类型不匹配\",{\"1\":{\"114\":1}}],[\"因为\",{\"1\":{\"114\":1}}],[\"因此可以借助于\",{\"1\":{\"33\":1}}],[\"因此\",{\"1\":{\"30\":1}}],[\"只要它们的结构相似\",{\"1\":{\"114\":1}}],[\"只要一个对象具有与所需的操作相匹配的方法和属性\",{\"1\":{\"112\":1}}],[\"结构化类型系统\",{\"1\":{\"114\":1}}],[\"×\",{\"1\":{\"114\":1}}],[\"同样存在类型的兼容性比较\",{\"1\":{\"114\":1}}],[\"同时也庆幸这个类型的属性比较少\",{\"1\":{\"93\":1}}],[\"同时保持类型安全性\",{\"1\":{\"92\":1,\"93\":1}}],[\"最后你需要注意的是\",{\"1\":{\"114\":1}}],[\"即如果\",{\"1\":{\"114\":1}}],[\"即使它们的名称不同\",{\"1\":{\"114\":1}}],[\"即使它的实际类型并不相同\",{\"1\":{\"112\":1,\"113\":1}}],[\"即使两个类型的结构相同\",{\"1\":{\"114\":1}}],[\"即使有些信息是没有改变的\",{\"1\":{\"93\":1}}],[\"也遵循\",{\"1\":{\"114\":1}}],[\"也可以用于判断变量的实际类型\",{\"1\":{\"105\":1}}],[\"前者继承了后者并增加了一个方法\",{\"1\":{\"114\":1}}],[\"前辈\",{\"1\":{\"107\":1}}],[\"√\",{\"1\":{\"114\":1}}],[\"都是加可辨识属性\",{\"1\":{\"114\":1}}],[\"加可辨识属性\",{\"1\":{\"114\":1}}],[\"加哪不是加\",{\"1\":{\"114\":1}}],[\"加一个\",{\"1\":{\"114\":1}}],[\"加密展示\",{\"1\":{\"22\":1,\"51\":1}}],[\"没错\",{\"1\":{\"114\":1}}],[\"没有类型错误\",{\"1\":{\"114\":1}}],[\"有的只是一脸懵逼的你\",{\"1\":{\"114\":1}}],[\"有时向后端请求数据时会返回请求状态码\",{\"1\":{\"95\":1}}],[\"爆红\",{\"1\":{\"114\":1}}],[\"but\",{\"1\":{\"114\":1}}],[\"boolean\",{\"1\":{\"104\":6,\"105\":1,\"114\":1}}],[\"boolean>\",{\"1\":{\"96\":1}}],[\"box\",{\"1\":{\"98\":1}}],[\"box<string>\",{\"1\":{\"98\":1}}],[\"box<number>\",{\"1\":{\"98\":1}}],[\"box<t>\",{\"1\":{\"98\":1}}],[\"直觉告诉你这是一段不对的代码\",{\"1\":{\"114\":1}}],[\"quack\",{\"1\":{\"113\":9,\"114\":18}}],[\"迁移的小伙伴都知道在\",{\"1\":{\"113\":1}}],[\"迁移到\",{\"1\":{\"106\":1}}],[\"叫起声来也像只鸭子\",{\"1\":{\"112\":1}}],[\"比实际类型更重要\",{\"1\":{\"112\":1}}],[\"比如在处理字符串和数组时\",{\"1\":{\"95\":1}}],[\"方法和属性\",{\"1\":{\"112\":1}}],[\"鸭子类型示例\",{\"1\":{\"113\":1}}],[\"鸭子类型的名字来自于一句俚语\",{\"1\":{\"112\":1}}],[\"鸭子类型的基本思想是\",{\"1\":{\"112\":1}}],[\"鸭子类型\",{\"0\":{\"114\":1},\"1\":{\"112\":1}}],[\"什么是鸭子类型\",{\"0\":{\"112\":1}}],[\"阴魂不散的鸭子类型\",{\"0\":{\"111\":1}}],[\"总的来说\",{\"1\":{\"108\":1}}],[\"总结\",{\"0\":{\"108\":1}}],[\"根据对象的实例关系判断变量的具体类型\",{\"1\":{\"108\":1}}],[\"并非像\",{\"1\":{\"114\":1}}],[\"并且在\",{\"1\":{\"108\":1}}],[\"并将其保存在\",{\"1\":{\"98\":1}}],[\"并将其返回\",{\"1\":{\"97\":1}}],[\"obj\",{\"1\":{\"107\":7}}],[\"on\",{\"1\":{\"104\":2}}],[\"推断\",{\"1\":{\"106\":2,\"107\":2}}],[\"推断为\",{\"1\":{\"105\":1}}],[\"或其派生构造函数\",{\"1\":{\"108\":1}}],[\"或\",{\"1\":{\"106\":1,\"108\":1,\"114\":1}}],[\"或者说可以使用类型\",{\"1\":{\"114\":1}}],[\"或者用它来结合条件语句实现类型保护\",{\"1\":{\"108\":1}}],[\"或者\",{\"1\":{\"104\":1}}],[\"仅仅是一或多个可辨识属性\",{\"1\":{\"106\":1}}],[\"缩小联合类型的范围\",{\"1\":{\"106\":1,\"108\":2}}],[\"操作符不仅可以用来检查属性是否存在\",{\"1\":{\"106\":1}}],[\"操作符用于检查一个对象是否具有特定属性\",{\"1\":{\"106\":1}}],[\"gender\",{\"1\":{\"106\":1}}],[\"getlength\",{\"1\":{\"95\":2}}],[\"getlength<t\",{\"1\":{\"95\":1}}],[\"里氏替换原则\",{\"1\":{\"114\":1}}],[\"里的\",{\"0\":{\"114\":1}}],[\"里的鸭子类型\",{\"0\":{\"113\":1}}],[\"里\",{\"1\":{\"106\":1}}],[\"首先我么回想一下\",{\"1\":{\"106\":1}}],[\"简单说一下他如何做到类型推导作用\",{\"1\":{\"106\":1}}],[\"他还需要你能发出同一品种的叫声\",{\"1\":{\"114\":1}}],[\"他不像\",{\"1\":{\"114\":1}}],[\"他们都并不是\",{\"1\":{\"106\":1}}],[\"他根本就没起到任何约束作用\",{\"1\":{\"104\":1}}],[\"被\",{\"1\":{\"105\":1}}],[\"被视为前端开发领域的基础工具\",{\"1\":{\"88\":1}}],[\"输出\",{\"1\":{\"105\":3,\"106\":2,\"113\":2}}],[\"返回一个字符串\",{\"1\":{\"105\":1}}],[\"返回顶部按钮\",{\"1\":{\"24\":1,\"62\":1}}],[\"条件分支里\",{\"1\":{\"104\":1}}],[\"例如\",{\"1\":{\"105\":2}}],[\"例如当变量的类型是\",{\"1\":{\"104\":1}}],[\"例\",{\"1\":{\"104\":1}}],[\"需要注意的是\",{\"1\":{\"104\":1}}],[\"预期类型来帮助类型推导\",{\"1\":{\"104\":1}}],[\"+\",{\"1\":{\"104\":1}}],[\"引入了\",{\"1\":{\"104\":1}}],[\"原来\",{\"1\":{\"104\":1}}],[\"看起来不太妙\",{\"1\":{\"104\":1}}],[\"看起来难以扩展\",{\"1\":{\"104\":1}}],[\"发现静态推导出的类型是\",{\"1\":{\"104\":2}}],[\"于是您写出了这一段代码\",{\"1\":{\"104\":1}}],[\"且不太优雅不是吗\",{\"1\":{\"104\":1}}],[\"逻辑\",{\"1\":{\"104\":1}}],[\"从\",{\"1\":{\"113\":1}}],[\"从而提高代码质量和可维护性\",{\"1\":{\"108\":1}}],[\"从而根据属性的存在与否进行精确的类型判断\",{\"1\":{\"108\":1}}],[\"从而获得更准确的类型推断\",{\"1\":{\"108\":1}}],[\"从而更精确地推断变量的类型\",{\"1\":{\"106\":1}}],[\"从而在不同分支中得到不同的类型推断\",{\"1\":{\"105\":1}}],[\"从而创建一个新的类型\",{\"1\":{\"93\":1}}],[\"从简单应用的角度出发似乎你需要\",{\"1\":{\"104\":1}}],[\"假值\",{\"1\":{\"104\":1}}],[\"您可以使用\",{\"1\":{\"108\":3}}],[\"您在从\",{\"1\":{\"106\":1}}],[\"您需要判断一个值是否为真\",{\"1\":{\"104\":1}}],[\"您点开了\",{\"1\":{\"93\":1}}],[\"`name\",{\"1\":{\"106\":2}}],[\"`\",{\"1\":{\"104\":1,\"106\":2}}],[\"`unknown\",{\"1\":{\"104\":1}}],[\"$\",{\"1\":{\"104\":1,\"106\":3}}],[\"要是走到这里就说明有问题\",{\"1\":{\"104\":1}}],[\"避免出现错误\",{\"1\":{\"104\":1}}],[\"正确地进行类型推断和类型检查\",{\"1\":{\"104\":1}}],[\"属性\",{\"1\":{\"104\":1}}],[\"属性中\",{\"1\":{\"98\":1}}],[\"时\",{\"1\":{\"104\":1,\"106\":1}}],[\"检查\",{\"1\":{\"104\":1}}],[\"变量的实际类型\",{\"1\":{\"104\":1}}],[\"变得非常重要\",{\"1\":{\"88\":1}}],[\"然而当这段代码进入\",{\"1\":{\"114\":1}}],[\"然而\",{\"1\":{\"104\":1}}],[\"当一个变量的类型被确定后\",{\"1\":{\"104\":1}}],[\"当你使用\",{\"1\":{\"93\":1}}],[\"错误代码\",{\"1\":{\"104\":1}}],[\"x属性\",{\"1\":{\"104\":1}}],[\"xxx\",{\"1\":{\"104\":1}}],[\"yyy\",{\"1\":{\"104\":2}}],[\"刚接触\",{\"1\":{\"104\":1}}],[\"获取更好的类型推导只是其中的一个方式而已\",{\"1\":{\"99\":1}}],[\"帮助\",{\"1\":{\"99\":1}}],[\"希望您注意的是\",{\"1\":{\"99\":1}}],[\"css\",{\"0\":{\"118\":1}}],[\"c\",{\"1\":{\"114\":1}}],[\"charat\",{\"1\":{\"104\":1}}],[\"class\",{\"1\":{\"98\":1,\"107\":2,\"114\":8}}],[\"codefunction\",{\"1\":{\"105\":1}}],[\"codeconst\",{\"1\":{\"105\":1}}],[\"codeconsole\",{\"1\":{\"105\":1}}],[\"console\",{\"1\":{\"105\":3,\"106\":4,\"107\":2,\"113\":2}}],[\"constructor\",{\"1\":{\"98\":1,\"107\":2}}],[\"const\",{\"1\":{\"36\":1,\"93\":1,\"95\":2,\"96\":1,\"97\":1,\"98\":2,\"99\":1,\"104\":4,\"105\":1,\"106\":1,\"113\":2}}],[\"color\",{\"1\":{\"45\":1}}],[\"com\",{\"1\":{\"45\":2}}],[\"保持了输入和输出的类型一致\",{\"1\":{\"97\":1}}],[\"接受一个参数\",{\"1\":{\"97\":1}}],[\"函数期望接受一个参数类型为\",{\"1\":{\"114\":1}}],[\"函数\",{\"1\":{\"97\":1}}],[\"<t>\",{\"1\":{\"97\":1}}],[\"默认会使用声明的默认值来填充\",{\"1\":{\"96\":1}}],[\"默认值\",{\"0\":{\"96\":1}}],[\"不过这里又会涉及到另一种情况\",{\"1\":{\"114\":1}}],[\"不要为了用泛型而用泛型\",{\"1\":{\"99\":1}}],[\"不满足约束\",{\"1\":{\"95\":1}}],[\"不然打可选符需要花费一天的时间\",{\"1\":{\"93\":1}}],[\"来说\",{\"1\":{\"114\":1}}],[\"来进行类型推断\",{\"1\":{\"108\":1}}],[\"来结合类型守卫\",{\"1\":{\"108\":1}}],[\"来标明其类型约束\",{\"1\":{\"95\":1}}],[\"来解析\",{\"1\":{\"33\":1}}],[\"通常为数字字面量集合\",{\"1\":{\"95\":1}}],[\"通过了typeof\",{\"1\":{\"104\":1}}],[\"通过使用\",{\"1\":{\"104\":1}}],[\"通过\",{\"1\":{\"32\":1,\"35\":1}}],[\"5\",{\"1\":{\"95\":1}}],[\">\",{\"1\":{\"95\":2}}],[\"经常需要获取它们的长度\",{\"1\":{\"95\":1}}],[\"确保传递的值满足某些条件\",{\"1\":{\"95\":1}}],[\"关键字起到类型推导作用的核心是可辨识属性\",{\"1\":{\"114\":1}}],[\"关键字结合类型保护来进行更精确的类型推断\",{\"1\":{\"108\":1}}],[\"关键字结合可辨识属性\",{\"1\":{\"108\":1}}],[\"关键字用于检查对象是否是某个构造函数\",{\"1\":{\"108\":1}}],[\"关键字用于检查对象是否具有特定属性\",{\"1\":{\"108\":1}}],[\"关键字用于获取变量的数据类型\",{\"1\":{\"108\":1}}],[\"关键字来获取变量的静态类型\",{\"1\":{\"108\":1}}],[\"关键字来显式地提供类型信息\",{\"1\":{\"104\":1}}],[\"关键字不是\",{\"1\":{\"108\":1}}],[\"关键字相关的类型推导将会无比信任你的设置\",{\"1\":{\"104\":1}}],[\"关键字\",{\"0\":{\"104\":1,\"105\":1,\"106\":1,\"107\":1},\"1\":{\"104\":1,\"108\":4}}],[\"关键字限制泛型参数的类型范围\",{\"1\":{\"95\":1}}],[\"关于这些扩展\",{\"1\":{\"34\":1}}],[\"使用标称类型系统\",{\"1\":{\"114\":1}}],[\"使用\",{\"1\":{\"95\":1}}],[\"使用指南\",{\"1\":{\"60\":2},\"2\":{\"23\":1,\"25\":1,\"28\":1,\"57\":1,\"63\":1,\"64\":1}}],[\"该类型的每个属性都可以不设置或设置为\",{\"1\":{\"93\":1}}],[\"所以要让\",{\"1\":{\"114\":1}}],[\"所以直觉告诉您需要将判断逻辑封装起来提取到函数外部进行复用\",{\"1\":{\"104\":1}}],[\"所以\",{\"1\":{\"93\":1}}],[\"所以学习如何使用\",{\"1\":{\"88\":1}}],[\"在结构化类型系统中\",{\"1\":{\"114\":1}}],[\"在标称类型系统中\",{\"1\":{\"114\":1}}],[\"在比较对象类型的属性与方法时\",{\"1\":{\"114\":1}}],[\"在这里\",{\"1\":{\"105\":1,\"106\":2,\"107\":2}}],[\"在这个例子中\",{\"1\":{\"98\":1}}],[\"在\",{\"1\":{\"105\":2,\"106\":1,\"108\":2}}],[\"在某些情况下\",{\"1\":{\"104\":1}}],[\"在上面的例子中\",{\"1\":{\"97\":1}}],[\"在类型\",{\"1\":{\"93\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"24\":1}}],[\"表示操作数的基本类型\",{\"1\":{\"105\":1}}],[\"表示泛型参数\",{\"1\":{\"97\":1}}],[\"表示属性是否存在于对象中\",{\"1\":{\"106\":1}}],[\"表示属性可以不必存在\",{\"1\":{\"93\":1}}],[\"表示属性\",{\"1\":{\"93\":1}}],[\"表示将传入的类型\",{\"1\":{\"93\":1}}],[\"用于缩小联合类型的范围\",{\"1\":{\"105\":1}}],[\"用于类型检查和类型推断\",{\"1\":{\"105\":1}}],[\"用于获取类型\",{\"1\":{\"93\":1}}],[\"用于更新数据\",{\"1\":{\"93\":1}}],[\"它们仍被视为相同的类型\",{\"1\":{\"114\":1}}],[\"它们仍被视为不同的类型\",{\"1\":{\"114\":1}}],[\"它强调对象的行为\",{\"1\":{\"112\":1}}],[\"它返回一个布尔值\",{\"1\":{\"106\":1}}],[\"它可以用于获取变量的静态类型\",{\"1\":{\"105\":1}}],[\"它可以接受任意类型的值\",{\"1\":{\"98\":1}}],[\"它可以像函数可以声明一个参数的默认值一样\",{\"1\":{\"96\":1}}],[\"它会将传入的类型\",{\"1\":{\"93\":1}}],[\"它表示对类型\",{\"1\":{\"93\":1}}],[\"它允许您在定义函数\",{\"1\":{\"92\":1}}],[\"顿时就明白了泛型的重要性\",{\"1\":{\"93\":1}}],[\"随着一声苦笑\",{\"1\":{\"93\":1}}],[\"随后你了解到\",{\"1\":{\"93\":1}}],[\"keyof\",{\"1\":{\"93\":3}}],[\"就好啦\",{\"1\":{\"114\":1}}],[\"就能够根据你的断言\",{\"1\":{\"104\":1}}],[\"就会出现类型错误\",{\"1\":{\"95\":1}}],[\"就可以采用以下方法\",{\"1\":{\"95\":1}}],[\"就解决了上述问题\",{\"1\":{\"93\":1}}],[\"就像函数可以接受参数一样\",{\"1\":{\"92\":1}}],[\"一章中\",{\"1\":{\"114\":1}}],[\"一样\",{\"1\":{\"107\":1,\"114\":1}}],[\"一定是布尔值\",{\"1\":{\"104\":1}}],[\"一定是数字\",{\"1\":{\"104\":1}}],[\"一定是字符串\",{\"1\":{\"104\":1}}],[\"一切为了降低自身的心智模型负担\",{\"1\":{\"99\":1}}],[\"一句简简单单的type\",{\"1\":{\"93\":1}}],[\"一个变量的具体类型\",{\"1\":{\"108\":1}}],[\"一个被星标了的苹果文章\",{\"1\":{\"70\":1}}],[\"一个被数字\",{\"1\":{\"6\":1}}],[\"一个拥有\",{\"1\":{\"40\":1}}],[\"会得到根据标称类型系统的原则\",{\"1\":{\"114\":1}}],[\"会被认为是\",{\"1\":{\"114\":1}}],[\"会觉得这种使用方式是很符合直觉的\",{\"1\":{\"106\":1}}],[\"会将传入的对象类型复制一份\",{\"1\":{\"93\":1}}],[\"会使用\",{\"1\":{\"33\":1}}],[\"工具类型实现\",{\"1\":{\"93\":1}}],[\"工具类型\",{\"1\":{\"93\":1}}],[\"哑巴吃黄连\",{\"1\":{\"93\":1}}],[\"那么类型\",{\"1\":{\"114\":1}}],[\"那么它就是只鸭子\",{\"1\":{\"112\":1}}],[\"那么它就可以被视为符合所需的类型\",{\"1\":{\"112\":1,\"113\":1}}],[\"那么更新时会要求userinfo所有属性都应该存在\",{\"1\":{\"93\":1}}],[\"那怎么办\",{\"1\":{\"93\":1}}],[\"想这样\",{\"1\":{\"93\":1}}],[\"而传递给它的是一个类型为\",{\"1\":{\"114\":1}}],[\"而不需要影响程序的正确性\",{\"1\":{\"114\":1}}],[\"而不是继承关系或显式的类型声明\",{\"1\":{\"112\":1}}],[\"而\",{\"1\":{\"114\":1}}],[\"而能让其发挥作用的\",{\"1\":{\"106\":1}}],[\"而在\",{\"1\":{\"106\":1}}],[\"而是采用的结构化类型系统\",{\"1\":{\"114\":1}}],[\"而是\",{\"1\":{\"106\":1}}],[\"而是将类型作为参数传递\",{\"1\":{\"92\":1}}],[\"而实际上用户只会更新想更新的那部分信息\",{\"1\":{\"93\":1}}],[\"如果同学有心去尝试realduck\",{\"1\":{\"114\":1}}],[\"如果两个类型具有相同的属性和方法\",{\"1\":{\"114\":1}}],[\"如果一个对象具有与所需操作相匹配的方法和属性\",{\"1\":{\"113\":1}}],[\"如果它走起路来像只鸭子\",{\"1\":{\"112\":1}}],[\"如果传入一个不合法的值\",{\"1\":{\"95\":1}}],[\"如果您需要在应用中处理多个具有类似属性的对象\",{\"1\":{\"95\":1}}],[\"如果填写\",{\"1\":{\"93\":1}}],[\"如果你不了解它\",{\"1\":{\"32\":1}}],[\"如果你是一个新手\",{\"1\":{\"31\":1}}],[\"unknown\",{\"1\":{\"104\":6}}],[\"undefined\",{\"1\":{\"93\":1,\"104\":3}}],[\"u\",{\"1\":{\"99\":1}}],[\"u>\",{\"1\":{\"99\":1}}],[\"url\",{\"1\":{\"93\":1}}],[\"updateuser\",{\"1\":{\"93\":2}}],[\"updateuserinfo\",{\"1\":{\"93\":2}}],[\"updateparams\",{\"1\":{\"93\":2}}],[\"user\",{\"1\":{\"93\":2}}],[\"first\",{\"1\":{\"99\":2}}],[\"foo\",{\"1\":{\"96\":1,\"104\":2}}],[\"false\",{\"1\":{\"96\":1,\"104\":3,\"106\":1}}],[\"factory\",{\"1\":{\"96\":1}}],[\"factory<t\",{\"1\":{\"96\":1}}],[\"failure\",{\"1\":{\"95\":2}}],[\"function\",{\"1\":{\"93\":1,\"95\":1,\"97\":1,\"104\":5,\"106\":1,\"107\":1,\"113\":4,\"114\":4}}],[\"frontmatter\",{\"1\":{\"24\":1,\"32\":3,\"60\":1,\"62\":1}}],[\"woman\",{\"1\":{\"93\":2}}],[\"where\",{\"1\":{\"45\":1}}],[\"||\",{\"1\":{\"104\":12}}],[\"|\",{\"1\":{\"93\":2,\"95\":2,\"96\":2,\"104\":4,\"105\":1,\"106\":1,\"107\":1}}],[\"nominal\",{\"1\":{\"114\":1}}],[\"not\",{\"1\":{\"104\":2}}],[\"numtype\",{\"1\":{\"105\":2}}],[\"num\",{\"1\":{\"105\":2}}],[\"numberbox\",{\"1\":{\"98\":2}}],[\"number>\",{\"1\":{\"95\":1}}],[\"number\",{\"1\":{\"93\":2,\"95\":4,\"96\":1,\"98\":1,\"104\":7,\"105\":3,\"106\":1,\"114\":1}}],[\"null\",{\"1\":{\"104\":3}}],[\"never\",{\"1\":{\"104\":1,\"114\":1}}],[\"new\",{\"1\":{\"98\":2,\"104\":1,\"114\":5}}],[\"name\",{\"1\":{\"93\":2,\"106\":5,\"107\":5}}],[\"system\",{\"1\":{\"114\":2}}],[\"s\",{\"1\":{\"114\":3}}],[\"substitution\",{\"1\":{\"114\":1}}],[\"success\",{\"1\":{\"95\":2}}],[\"squeak\",{\"1\":{\"113\":2}}],[\"species\",{\"1\":{\"107\":5}}],[\"structural\",{\"1\":{\"114\":1}}],[\"strtype\",{\"1\":{\"105\":2}}],[\"str\",{\"1\":{\"105\":2}}],[\"strornumorbool\",{\"1\":{\"104\":8}}],[\"string>\",{\"1\":{\"99\":1}}],[\"stringbox\",{\"1\":{\"98\":2}}],[\"stringlength\",{\"1\":{\"95\":2}}],[\"string\",{\"1\":{\"93\":2,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"104\":7,\"105\":5,\"106\":3,\"107\":4}}],[\"second\",{\"1\":{\"99\":2}}],[\"sex\",{\"1\":{\"93\":2}}],[\"software\",{\"1\":{\"88\":1}}],[\"但如果它们的名称不同\",{\"1\":{\"114\":1}}],[\"但对于特殊的\",{\"1\":{\"114\":1}}],[\"但您在代码中使用\",{\"1\":{\"108\":1}}],[\"但类型是\",{\"1\":{\"104\":1}}],[\"但这不能发挥类型推导的全部功能\",{\"1\":{\"104\":1}}],[\"但他们明显不允许被推导为同一类型\",{\"1\":{\"95\":1}}],[\"但会额外添加一个\",{\"1\":{\"93\":1}}],[\"但是每次都有这么幸运么\",{\"1\":{\"93\":1}}],[\"但是你需要使用相对链接\",{\"1\":{\"61\":1}}],[\"但现在你手中只有以下类型以及代码\",{\"1\":{\"93\":1}}],[\"duck\",{\"1\":{\"112\":1,\"113\":4,\"114\":6}}],[\"discriminant\",{\"1\":{\"106\":1,\"108\":1,\"114\":1}}],[\"dialog\",{\"1\":{\"93\":1}}],[\"declared\",{\"1\":{\"114\":1}}],[\"declare\",{\"1\":{\"104\":3}}],[\"desc\",{\"1\":{\"45\":1}}],[\"does\",{\"1\":{\"104\":2}}],[\"data\",{\"1\":{\"93\":1}}],[\"场景二\",{\"1\":{\"95\":1}}],[\"场景一\",{\"1\":{\"95\":1}}],[\"场景\",{\"1\":{\"93\":1,\"104\":1}}],[\"还可以用来进行类型推导\",{\"1\":{\"106\":1}}],[\"还支持类型保护\",{\"1\":{\"105\":1}}],[\"还是让我们从实际应用场景开始学习\",{\"1\":{\"93\":1}}],[\"还不会编写\",{\"1\":{\"31\":1}}],[\"真的有必要用泛型吗\",{\"0\":{\"93\":1}}],[\"真的有人会靠这玩意学东西\",{\"1\":{\"92\":1}}],[\"可辨识属性\",{\"1\":{\"114\":1}}],[\"可能无法精确地确定变量的类型\",{\"1\":{\"104\":1}}],[\"可复用的代码\",{\"1\":{\"92\":1,\"93\":1}}],[\"可以帮助您在编写代码时实现更准确的类型推导和类型检查\",{\"1\":{\"108\":1}}],[\"可以在条件分支中明确地告诉\",{\"1\":{\"108\":1}}],[\"可以在创建对象时指定具体的类型参数\",{\"1\":{\"99\":1}}],[\"可以安全地访问\",{\"1\":{\"104\":1}}],[\"可以传递任意类型\",{\"1\":{\"97\":1}}],[\"可以肯定的是\",{\"1\":{\"88\":1}}],[\"可以说是前端工程师的必备技能了\",{\"1\":{\"88\":1}}],[\"可以根据文件结构将它们转换为不同的页面\",{\"1\":{\"30\":1}}],[\"泛型接口允许您定义一个可以适用于多个类型的接口\",{\"1\":{\"99\":1}}],[\"泛型接口\",{\"0\":{\"99\":1}}],[\"泛型类\",{\"0\":{\"98\":1}}],[\"泛型函数\",{\"0\":{\"97\":1}}],[\"泛型同样有着默认值的设定\",{\"1\":{\"96\":1}}],[\"泛型约束\",{\"0\":{\"95\":1}}],[\"泛型的用法\",{\"0\":{\"94\":1}}],[\"泛型的概念可以类比为参数化类型\",{\"1\":{\"92\":1}}],[\"泛型的概念\",{\"0\":{\"92\":1}}],[\"泛型允许您传递类型作为参数\",{\"1\":{\"92\":1}}],[\"泛型使您能够编写更通用\",{\"1\":{\"92\":1,\"93\":1}}],[\"以下的一段代码\",{\"1\":{\"104\":1}}],[\"以在使用时确定具体的类型\",{\"1\":{\"92\":1}}],[\"以便\",{\"1\":{\"30\":1}}],[\"类型的相等性和兼容性是基于类型的结构和成员来判断的\",{\"1\":{\"114\":1}}],[\"类型的相等性和兼容性是基于类型的名称或标识符来判断的\",{\"1\":{\"114\":1}}],[\"类型匹配\",{\"1\":{\"114\":2}}],[\"类型不匹配\",{\"1\":{\"114\":1}}],[\"类型推断\",{\"1\":{\"105\":2}}],[\"类型推导\",{\"0\":{\"102\":1,\"103\":1},\"1\":{\"88\":1,\"114\":1}}],[\"类型赋予\",{\"1\":{\"104\":1}}],[\"类型\",{\"1\":{\"95\":1,\"98\":2,\"105\":1,\"106\":2,\"107\":2}}],[\"类型时\",{\"1\":{\"93\":1}}],[\"类或接口时不指定具体的数据类型\",{\"1\":{\"92\":1}}],[\"本章讲解类型推导\",{\"1\":{\"102\":1}}],[\"本章讲解泛型基本知识\",{\"1\":{\"91\":1}}],[\"本页面就是一个示例\",{\"1\":{\"24\":1}}],[\"初探泛型\",{\"0\":{\"91\":1}}],[\"进行遍历\",{\"1\":{\"93\":1}}],[\"进行引用\",{\"1\":{\"61\":2}}],[\"进阶\",{\"2\":{\"90\":1,\"101\":1,\"110\":1,\"116\":1}}],[\"让类型趋于明确\",{\"0\":{\"102\":1,\"103\":1},\"1\":{\"88\":1,\"114\":1}}],[\"深入学习\",{\"1\":{\"88\":1}}],[\"已被开发人员普遍接受\",{\"1\":{\"88\":1}}],[\"无论\",{\"1\":{\"88\":1}}],[\"成为前端开发的主要语言\",{\"1\":{\"88\":1}}],[\"将会基于这个类型来做类型检查和类型推断\",{\"1\":{\"104\":1}}],[\"将超越\",{\"1\":{\"88\":1}}],[\"将你的个人介绍和档案放置在此处\",{\"1\":{\"0\":1}}],[\"84\",{\"1\":{\"88\":1}}],[\"针对\",{\"1\":{\"88\":1}}],[\"软件开发设计公司\",{\"1\":{\"88\":1}}],[\"读后记\",{\"0\":{\"87\":1}}],[\"系列\",{\"0\":{\"85\":1,\"86\":1,\"88\":1,\"117\":1}}],[\"java\",{\"1\":{\"114\":2}}],[\"javascriptcopy\",{\"1\":{\"105\":1}}],[\"javascript\",{\"0\":{\"85\":1,\"113\":1},\"1\":{\"88\":2,\"105\":2,\"106\":2,\"113\":2,\"114\":1}}],[\"john\",{\"1\":{\"106\":1}}],[\"js\",{\"1\":{\"106\":1}}],[\"jpg\",{\"1\":{\"45\":1}}],[\"圆\",{\"2\":{\"69\":1,\"74\":1,\"79\":1,\"84\":1}}],[\"大\",{\"2\":{\"69\":1,\"74\":1,\"79\":1,\"84\":1}}],[\"红\",{\"2\":{\"69\":1,\"74\":1,\"79\":1,\"84\":1}}],[\"苹果\",{\"0\":{\"65\":1,\"70\":1,\"75\":1,\"80\":1},\"2\":{\"68\":1,\"73\":1,\"78\":1,\"83\":1}}],[\"此外\",{\"1\":{\"105\":1}}],[\"此时鼠标指向input\",{\"1\":{\"104\":2}}],[\"此页面应当包含\",{\"1\":{\"62\":1}}],[\"此文字有脚注\",{\"1\":{\"41\":1}}],[\"徽章\",{\"1\":{\"61\":1}}],[\"徽章文字\",{\"1\":{\"61\":1}}],[\"person\",{\"1\":{\"106\":10,\"107\":4}}],[\"principle\",{\"1\":{\"114\":1}}],[\"printnameorspecies\",{\"1\":{\"107\":1}}],[\"printinfo\",{\"1\":{\"106\":1}}],[\"printlength\",{\"1\":{\"105\":1}}],[\"property\",{\"1\":{\"104\":2,\"106\":2,\"108\":2,\"114\":2}}],[\"pair<number\",{\"1\":{\"99\":1}}],[\"pair<t\",{\"1\":{\"99\":1}}],[\"pair\",{\"1\":{\"99\":1}}],[\"partial<t>\",{\"1\":{\"93\":3}}],[\"partial<user>\",{\"1\":{\"93\":1}}],[\"partial\",{\"1\":{\"93\":3}}],[\"params\",{\"1\":{\"93\":1}}],[\"p\",{\"1\":{\"93\":6}}],[\"post\",{\"1\":{\"93\":1}}],[\"public\",{\"1\":{\"61\":1}}],[\"plugin\",{\"1\":{\"35\":1}}],[\"分类为\",{\"1\":{\"60\":1}}],[\"日\",{\"1\":{\"60\":1}}],[\"月\",{\"1\":{\"60\":1}}],[\"年前端市场状态的调查显示\",{\"1\":{\"88\":1}}],[\"年\",{\"1\":{\"60\":1}}],[\"写作日期为\",{\"1\":{\"60\":1}}],[\"作者设置为\",{\"1\":{\"60\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"59\":1}}],[\"↩︎\",{\"1\":{\"56\":1}}],[\"这意味着可以更灵活地处理不同名称的类型\",{\"1\":{\"114\":1}}],[\"这意味着只有显式声明为相同名称的类型才被认为是相等的\",{\"1\":{\"114\":1}}],[\"这句话强调的是\",{\"1\":{\"112\":1}}],[\"这些关键字和技术在\",{\"1\":{\"108\":1}}],[\"这些年越来越火\",{\"1\":{\"88\":1}}],[\"这有助于在特定分支中进行精确的类型推断和类型检查\",{\"1\":{\"108\":1}}],[\"这样一个结论\",{\"1\":{\"114\":1}}],[\"这样\",{\"1\":{\"104\":1}}],[\"这样在你调用时就可以不带任何参数了\",{\"1\":{\"96\":1}}],[\"这就是类型推导\",{\"1\":{\"104\":1}}],[\"这时的\",{\"1\":{\"114\":1}}],[\"这时的你回想起在\",{\"1\":{\"114\":1}}],[\"这时你可能需要显式地告诉\",{\"1\":{\"104\":1}}],[\"这时我们通过\",{\"1\":{\"95\":1}}],[\"这也是泛型那段枯燥无味的概念想要告诉你的\",{\"1\":{\"93\":1}}],[\"这是因为在\",{\"1\":{\"104\":1}}],[\"这是\",{\"1\":{\"93\":1}}],[\"这是一个映射类型的语法\",{\"1\":{\"93\":1}}],[\"这是一个泛型类型的定义\",{\"1\":{\"93\":1}}],[\"这是脚注内容\",{\"1\":{\"56\":1}}],[\"这段类型限制起作用也很简单\",{\"1\":{\"114\":1}}],[\"这段代码太简单了\",{\"1\":{\"93\":1}}],[\"这段概念真的太空了不是吗\",{\"1\":{\"92\":1}}],[\"这里短暂科普以下两者的区别\",{\"1\":{\"114\":1}}],[\"这里也侧面印证了\",{\"1\":{\"114\":1}}],[\"这里也不做过多介绍\",{\"1\":{\"106\":1}}],[\"这里就不过多赘述了\",{\"1\":{\"107\":1}}],[\"这里填写什么类型好呢\",{\"1\":{\"93\":2}}],[\"这里是内容\",{\"1\":{\"2\":1,\"3\":1,\"7\":1,\"8\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1,\"66\":1,\"67\":1,\"71\":1,\"72\":1,\"76\":1,\"77\":1,\"81\":1,\"82\":1}}],[\"这个系列我将会跟您一起由浅入深\",{\"1\":{\"88\":1}}],[\"幻灯片\",{\"0\":{\"56\":1}}],[\"交互演示\",{\"0\":{\"54\":1,\"55\":1}}],[\"捐赠一杯咖啡\",{\"1\":{\"53\":1}}],[\"向\",{\"1\":{\"53\":1}}],[\"样式化\",{\"0\":{\"53\":1}}],[\"导入文件\",{\"0\":{\"51\":1}}],[\"导航栏\",{\"1\":{\"24\":1,\"62\":1}}],[\"−1\",{\"1\":{\"50\":1}}],[\"read\",{\"1\":{\"114\":1}}],[\"realduck\",{\"1\":{\"113\":2,\"114\":11}}],[\"replace\",{\"1\":{\"104\":2}}],[\"result\",{\"1\":{\"97\":2}}],[\"res3\",{\"1\":{\"95\":1}}],[\"res2\",{\"1\":{\"95\":1}}],[\"resstatus<\",{\"1\":{\"95\":1}}],[\"resstatus<20000>\",{\"1\":{\"95\":1}}],[\"resstatus<10000>\",{\"1\":{\"95\":1}}],[\"resstatus<rescode\",{\"1\":{\"95\":1}}],[\"res1\",{\"1\":{\"95\":1}}],[\"rescode\",{\"1\":{\"95\":1}}],[\"request\",{\"1\":{\"93\":1}}],[\"return\",{\"1\":{\"93\":1,\"95\":1,\"97\":1,\"104\":4,\"114\":2}}],[\"r−i​\",{\"1\":{\"50\":1}}],[\"r−i+1\",{\"1\":{\"50\":1}}],[\"r+i=1∑r​ωi\",{\"1\":{\"50\":1}}],[\"rgba\",{\"1\":{\"45\":1}}],[\"ωyω​\",{\"1\":{\"50\":2}}],[\"∂ωr∂r​\",{\"1\":{\"50\":1}}],[\"流程图\",{\"0\":{\"48\":1}}],[\"engine\",{\"1\":{\"114\":1}}],[\"enhance\",{\"1\":{\"35\":1}}],[\"eat\",{\"1\":{\"114\":1}}],[\"error\",{\"1\":{\"104\":1}}],[\"else\",{\"1\":{\"104\":3,\"106\":1,\"107\":1}}],[\"exhaustivecheck\",{\"1\":{\"104\":2}}],[\"exist\",{\"1\":{\"104\":2}}],[\"extends\",{\"1\":{\"95\":5}}],[\"export\",{\"1\":{\"93\":1}}],[\"es6\",{\"1\":{\"88\":1}}],[\"echarts\",{\"0\":{\"47\":1}}],[\"图表\",{\"0\":{\"46\":1}}],[\"图片增强\",{\"0\":{\"44\":1}}],[\"0\",{\"1\":{\"45\":1,\"104\":3}}],[\"lsp\",{\"1\":{\"114\":1}}],[\"let\",{\"1\":{\"105\":2}}],[\"length\",{\"1\":{\"95\":2,\"104\":2,\"105\":1}}],[\"log\",{\"1\":{\"105\":4,\"106\":4,\"107\":2,\"113\":2}}],[\"loginapi\",{\"1\":{\"93\":1}}],[\"logy\",{\"1\":{\"50\":2}}],[\"logo2\",{\"1\":{\"45\":1}}],[\"logo\",{\"1\":{\"45\":1}}],[\"liskov\",{\"1\":{\"114\":1}}],[\"linbudu599\",{\"1\":{\"104\":1}}],[\"linbudu\",{\"1\":{\"104\":1}}],[\"linux\",{\"0\":{\"86\":1}}],[\"link\",{\"1\":{\"45\":1}}],[\"light\",{\"1\":{\"45\":1}}],[\"typing\",{\"1\":{\"112\":1}}],[\"typeof\",{\"0\":{\"105\":1},\"1\":{\"104\":5,\"105\":11,\"108\":3,\"113\":1}}],[\"type\",{\"1\":{\"93\":3,\"95\":4,\"96\":1,\"104\":3,\"114\":2}}],[\"typescriptcopy\",{\"1\":{\"105\":2}}],[\"typescript\",{\"0\":{\"88\":1,\"114\":1},\"1\":{\"88\":7,\"92\":1,\"93\":3,\"97\":1,\"99\":1,\"104\":9,\"105\":4,\"106\":4,\"107\":2,\"108\":6,\"114\":3},\"2\":{\"89\":1,\"90\":1,\"100\":1,\"101\":1,\"109\":1,\"110\":1,\"115\":1,\"116\":1}}],[\"tagged\",{\"1\":{\"106\":1,\"108\":1,\"114\":1}}],[\"ts\",{\"1\":{\"106\":1}}],[\"true\",{\"1\":{\"104\":1,\"105\":1,\"106\":1,\"114\":1}}],[\"toyduck代码在\",{\"1\":{\"114\":1}}],[\"toyduck\",{\"1\":{\"113\":2,\"114\":11}}],[\"tofixed\",{\"1\":{\"104\":1}}],[\"toc\",{\"1\":{\"62\":1}}],[\"throw\",{\"1\":{\"104\":1}}],[\"this\",{\"1\":{\"98\":1,\"107\":2}}],[\"the\",{\"1\":{\"88\":1}}],[\"there\",{\"1\":{\"45\":2}}],[\"t\",{\"1\":{\"93\":10,\"95\":1,\"96\":1,\"97\":2,\"98\":2,\"99\":1,\"114\":3}}],[\"tex\",{\"0\":{\"50\":1}}],[\"title\",{\"1\":{\"45\":1}}],[\"hello\",{\"1\":{\"95\":1,\"97\":1,\"98\":1,\"99\":1,\"105\":2}}],[\"house\",{\"1\":{\"88\":1}}],[\"hope\",{\"1\":{\"45\":4,\"53\":1,\"60\":1}}],[\"https\",{\"1\":{\"45\":2}}],[\"h2o\",{\"1\":{\"38\":1}}],[\"卡片\",{\"0\":{\"45\":1}}],[\"支持为图片设置颜色模式和大小\",{\"1\":{\"44\":1}}],[\"计划\",{\"1\":{\"43\":2}}],[\"任务列表\",{\"0\":{\"43\":1}}],[\"重要的内容\",{\"1\":{\"42\":1}}],[\"标称类型系统\",{\"1\":{\"114\":1}}],[\"标签为\",{\"1\":{\"60\":1}}],[\"标记\",{\"0\":{\"42\":1}}],[\"标题和页面信息\",{\"1\":{\"62\":1}}],[\"标题\",{\"0\":{\"2\":1,\"3\":1,\"7\":1,\"8\":1,\"12\":1,\"13\":1,\"17\":1,\"18\":1,\"66\":1,\"67\":1,\"71\":1,\"72\":1,\"76\":1,\"77\":1,\"81\":1,\"82\":1}}],[\"脚注\",{\"0\":{\"41\":1}}],[\"单词\",{\"1\":{\"40\":1}}],[\"的对象\",{\"1\":{\"114\":3}}],[\"的对象代替类型\",{\"1\":{\"114\":1}}],[\"的对象替换\",{\"1\":{\"114\":1}}],[\"的对象可以被类型\",{\"1\":{\"114\":1}}],[\"的一个子类型\",{\"1\":{\"114\":1}}],[\"的子类\",{\"1\":{\"114\":1}}],[\"的实例\",{\"1\":{\"108\":1}}],[\"的作用\",{\"1\":{\"106\":1}}],[\"的分支环境\",{\"1\":{\"104\":1}}],[\"的类型\",{\"1\":{\"104\":1}}],[\"的类型为\",{\"1\":{\"97\":1,\"105\":2}}],[\"的判断逻辑不会改变以进入\",{\"1\":{\"104\":1}}],[\"的报错\",{\"1\":{\"104\":1}}],[\"的朋友可能时常遇到问题如\",{\"1\":{\"104\":1}}],[\"的所有属性名称\",{\"1\":{\"93\":1}}],[\"的每个属性变为可选属性\",{\"1\":{\"93\":1}}],[\"的每个属性\",{\"1\":{\"93\":1}}],[\"的属性都转换为可选属性\",{\"1\":{\"93\":1}}],[\"的内置工具类型\",{\"1\":{\"93\":1}}],[\"的受访者甚至认为\",{\"1\":{\"88\":1}}],[\"的受访者都在使用\",{\"1\":{\"88\":1}}],[\"的\",{\"1\":{\"40\":1,\"60\":1,\"98\":2,\"105\":1}}],[\"if\",{\"1\":{\"104\":8,\"105\":1,\"106\":1,\"107\":2,\"113\":1}}],[\"instanceof\",{\"0\":{\"107\":1},\"1\":{\"107\":2,\"108\":3}}],[\"in和typeof有着很奇妙的共同点\",{\"1\":{\"106\":1}}],[\"input\",{\"1\":{\"104\":36,\"105\":4}}],[\"interface\",{\"1\":{\"99\":1,\"106\":1}}],[\"in\",{\"0\":{\"106\":1},\"1\":{\"93\":2,\"106\":6,\"108\":3,\"114\":1}}],[\"ir⋯\",{\"1\":{\"50\":1}}],[\"isstring\",{\"1\":{\"104\":3}}],[\"isfalsy\",{\"1\":{\"104\":4}}],[\"is\",{\"0\":{\"104\":1},\"1\":{\"45\":2,\"104\":4,\"108\":3,\"114\":2}}],[\"ide\",{\"1\":{\"114\":1}}],[\"identity\",{\"1\":{\"97\":2}}],[\"identity<t>\",{\"1\":{\"97\":1}}],[\"id\",{\"1\":{\"40\":1}}],[\"its\",{\"1\":{\"114\":1}}],[\"it\",{\"1\":{\"33\":2}}],[\"我们会这样使用\",{\"1\":{\"106\":1}}],[\"我在右对齐\",{\"1\":{\"39\":1}}],[\"我是居中的\",{\"1\":{\"39\":1}}],[\"上述类型推导的简单应用可以应付一部分使用场景\",{\"1\":{\"104\":1}}],[\"上下角标\",{\"0\":{\"38\":1}}],[\"上一篇\",{\"1\":{\"24\":1}}],[\"查看详情\",{\"1\":{\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"详情容器\",{\"1\":{\"36\":1}}],[\"危险容器\",{\"1\":{\"36\":1}}],[\"警告容器\",{\"1\":{\"36\":1}}],[\"提示\",{\"1\":{\"61\":1}}],[\"提示容器\",{\"1\":{\"36\":1}}],[\"提供更加丰富的写作功能\",{\"1\":{\"35\":1}}],[\"===\",{\"1\":{\"104\":21,\"105\":1,\"113\":1}}],[\"=\",{\"1\":{\"36\":1,\"50\":1,\"93\":3,\"95\":6,\"96\":3,\"97\":1,\"98\":3,\"99\":1,\"104\":1,\"105\":2,\"106\":1,\"107\":2,\"113\":2}}],[\"animal\",{\"1\":{\"107\":4}}],[\"arg\",{\"1\":{\"97\":3}}],[\"arraylength\",{\"1\":{\"95\":2}}],[\"age\",{\"1\":{\"93\":3,\"106\":4}}],[\"attrs\",{\"0\":{\"40\":1}}],[\"a\",{\"1\":{\"36\":1}}],[\"与\",{\"1\":{\"36\":1}}],[\"代码中的\",{\"1\":{\"114\":1}}],[\"代码演示\",{\"0\":{\"52\":1}}],[\"代码块\",{\"0\":{\"37\":1}}],[\"代码\",{\"1\":{\"36\":1}}],[\"包含\",{\"1\":{\"36\":1}}],[\"信息容器\",{\"1\":{\"36\":1}}],[\"value\",{\"1\":{\"95\":2,\"98\":7,\"114\":1}}],[\"variable\",{\"1\":{\"36\":1}}],[\"vue\",{\"0\":{\"55\":1,\"117\":1}}],[\"vuepress\",{\"0\":{\"34\":1},\"1\":{\"30\":2,\"32\":2,\"33\":1,\"34\":2,\"35\":1,\"61\":1}}],[\"安全的在\",{\"1\":{\"36\":1}}],[\"自定义它们\",{\"1\":{\"62\":1}}],[\"自定义对齐\",{\"0\":{\"39\":1}}],[\"自定义标题\",{\"1\":{\"36\":5}}],[\"自定义容器\",{\"0\":{\"36\":1}}],[\"自用\",{\"0\":{\"21\":1}}],[\"myobject\",{\"1\":{\"106\":3}}],[\"man\",{\"1\":{\"93\":2}}],[\"markdown\",{\"0\":{\"30\":1,\"31\":1,\"32\":1,\"33\":1},\"1\":{\"22\":1,\"30\":2,\"31\":3,\"32\":1,\"33\":3,\"34\":2,\"35\":1,\"36\":1,\"51\":1,\"60\":1,\"61\":2},\"2\":{\"58\":1}}],[\"ms\",{\"1\":{\"60\":1}}],[\"more\",{\"1\":{\"59\":1,\"91\":1,\"102\":1}}],[\"mermaid\",{\"0\":{\"49\":1}}],[\"mister\",{\"1\":{\"45\":2}}],[\"mr\",{\"1\":{\"45\":1,\"53\":1}}],[\"md\",{\"1\":{\"35\":1}}],[\"主题包含了一个自定义徽章可以使用\",{\"1\":{\"61\":1}}],[\"主题扩展了更多\",{\"1\":{\"35\":1}}],[\"主题扩展\",{\"0\":{\"35\":1}}],[\"主要从\",{\"1\":{\"30\":1}}],[\"中被用于不同的情境\",{\"1\":{\"108\":1}}],[\"中可以用于类型检查和类型推断\",{\"1\":{\"108\":1}}],[\"中已有的部分\",{\"1\":{\"106\":1}}],[\"中新增的概念\",{\"1\":{\"106\":1}}],[\"中类型推导分析做不到跨函数上下文来进行类型的信息收集\",{\"1\":{\"104\":1}}],[\"中\",{\"1\":{\"104\":1,\"105\":2,\"106\":1,\"108\":2,\"113\":1,\"114\":1}}],[\"中设置页面信息\",{\"1\":{\"60\":1}}],[\"中使用\",{\"1\":{\"36\":1}}],[\"中的原生关键字\",{\"1\":{\"108\":1}}],[\"中的可选属性语法\",{\"1\":{\"93\":1}}],[\"中的类型\",{\"1\":{\"93\":1}}],[\"中的索引类型查询操作符\",{\"1\":{\"93\":1}}],[\"中的泛型是一种强大的工具\",{\"1\":{\"92\":1}}],[\"中的\",{\"1\":{\"34\":1,\"105\":2}}],[\"中很重要的一个概念\",{\"1\":{\"32\":1}}],[\"请使用绝对链接\",{\"1\":{\"61\":1}}],[\"请阅读\",{\"1\":{\"34\":1}}],[\"请先阅读\",{\"1\":{\"31\":1}}],[\"语法以及前端框架一起\",{\"1\":{\"88\":1}}],[\"语法\",{\"0\":{\"50\":1},\"1\":{\"35\":1}}],[\"语法进行了扩展\",{\"1\":{\"34\":1}}],[\"语法扩展\",{\"1\":{\"33\":1}}],[\"对象的行为决定了它的类型\",{\"1\":{\"112\":1}}],[\"对于\",{\"1\":{\"61\":1}}],[\"对\",{\"1\":{\"34\":1}}],[\"为\",{\"1\":{\"106\":2,\"107\":2}}],[\"为了一探究竟\",{\"1\":{\"93\":1}}],[\"为了完成这个目的\",{\"1\":{\"93\":1}}],[\"为了丰富文档写作\",{\"1\":{\"34\":1}}],[\"为每个\",{\"1\":{\"32\":1}}],[\"插件来实现\",{\"1\":{\"33\":1}}],[\"内容\",{\"1\":{\"33\":1}}],[\"扩展\",{\"0\":{\"33\":1,\"34\":1},\"1\":{\"34\":1}}],[\"是不成立的\",{\"1\":{\"114\":1}}],[\"是一种动态类型语言的概念\",{\"1\":{\"112\":1}}],[\"是一个泛型类\",{\"1\":{\"98\":1}}],[\"是否会超越\",{\"1\":{\"88\":1}}],[\"是\",{\"1\":{\"32\":1,\"93\":1,\"95\":2,\"98\":2,\"114\":1}}],[\"相关信息\",{\"1\":{\"32\":1}}],[\"配置\",{\"0\":{\"32\":1}}],[\"演示\",{\"1\":{\"31\":1}}],[\"和前面两个\",{\"1\":{\"107\":1}}],[\"和\",{\"1\":{\"31\":1,\"60\":1,\"88\":1,\"114\":1}}],[\"介绍\",{\"0\":{\"31\":1},\"1\":{\"31\":1,\"32\":1}}],[\"介绍页\",{\"0\":{\"0\":1}}],[\"你只要能鸭叫出声就行\",{\"1\":{\"114\":1}}],[\"你只能创建一个新的类型\",{\"1\":{\"93\":1}}],[\"你得到的仅仅只是一句\",{\"1\":{\"114\":1}}],[\"你会得到一个\",{\"1\":{\"104\":1}}],[\"你不能将\",{\"1\":{\"104\":1}}],[\"你也不应该在更新时发送所有的用户信息\",{\"1\":{\"93\":1}}],[\"你有一个用于更新用户信息的\",{\"1\":{\"93\":1}}],[\"你需要阅读\",{\"1\":{\"32\":1}}],[\"你应该创建和编写\",{\"1\":{\"30\":1}}],[\"你可以通过is\",{\"1\":{\"104\":1}}],[\"你可以通过主题选项和页面\",{\"1\":{\"62\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"24\":1}}],[\"你可以将图片和\",{\"1\":{\"61\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"61\":1}}],[\"你可以在代码中显式地告诉\",{\"1\":{\"104\":1}}],[\"你可以在\",{\"1\":{\"60\":1}}],[\"你可以标记\",{\"1\":{\"42\":1}}],[\"你可以使用它轻松生成文档或博客站点\",{\"1\":{\"30\":1}}],[\"文章标题列表\",{\"1\":{\"62\":1}}],[\"文章加密\",{\"2\":{\"29\":1}}],[\"文件夹的图片\",{\"1\":{\"61\":1}}],[\"文件放置在一起\",{\"1\":{\"61\":1}}],[\"文件\",{\"1\":{\"30\":1}}],[\"文件生成页面\",{\"1\":{\"30\":1}}],[\"文字结尾应该有深蓝色的\",{\"1\":{\"61\":1}}],[\"文字\",{\"1\":{\"27\":2}}],[\"文字段落\",{\"1\":{\"27\":24}}],[\"段落\",{\"1\":{\"27\":2}}],[\"实际的文章内容\",{\"1\":{\"27\":1}}],[\"密码加密的文章\",{\"0\":{\"27\":1}}],[\"页脚\",{\"1\":{\"24\":1,\"62\":1}}],[\"页面结构\",{\"0\":{\"62\":1}}],[\"页面内容\",{\"0\":{\"61\":1}}],[\"页面配置\",{\"0\":{\"59\":1},\"1\":{\"60\":1},\"2\":{\"64\":1}}],[\"页面引入配置\",{\"1\":{\"32\":1}}],[\"页面信息\",{\"0\":{\"60\":1},\"1\":{\"24\":1}}],[\"页面展示\",{\"1\":{\"22\":1,\"51\":1}}],[\"评论\",{\"1\":{\"24\":1,\"62\":1}}],[\"链接\",{\"1\":{\"24\":1,\"36\":1}}],[\"下一篇\",{\"1\":{\"24\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"62\":1}}],[\"更新时间\",{\"1\":{\"24\":1}}],[\"编辑此页链接\",{\"1\":{\"24\":1}}],[\"贡献者\",{\"1\":{\"24\":1,\"62\":1}}],[\"路径导航\",{\"1\":{\"24\":1,\"62\":1}}],[\"侧边栏\",{\"1\":{\"24\":1,\"62\":1}}],[\"禁用\",{\"2\":{\"26\":1}}],[\"禁用了如下功能\",{\"1\":{\"24\":1}}],[\"禁用展示\",{\"1\":{\"22\":1,\"51\":1}}],[\"布局与功能禁用\",{\"0\":{\"24\":1}}],[\"展示\",{\"0\":{\"30\":1},\"1\":{\"22\":1,\"51\":1}}],[\"目录\",{\"0\":{\"22\":1}}],[\"站点功能备忘\",{\"0\":{\"21\":1}}],[\"42\",{\"1\":{\"98\":1,\"99\":1,\"105\":2}}],[\"43\",{\"1\":{\"88\":1}}],[\"4\",{\"0\":{\"16\":1,\"80\":1}}],[\"星标了的香蕉文章\",{\"1\":{\"6\":1}}],[\"长\",{\"2\":{\"5\":1,\"10\":1,\"15\":1,\"20\":1}}],[\"弯曲的\",{\"2\":{\"5\":1,\"10\":1,\"15\":1,\"20\":1}}],[\"黄\",{\"2\":{\"5\":1,\"10\":1,\"15\":1,\"20\":1}}],[\"水果\",{\"2\":{\"4\":1,\"9\":1,\"78\":1,\"83\":1}}],[\"30\",{\"1\":{\"106\":1}}],[\"3\",{\"0\":{\"3\":1,\"8\":1,\"11\":1,\"13\":1,\"18\":1,\"67\":1,\"72\":1,\"75\":1,\"77\":1,\"82\":1},\"1\":{\"95\":2,\"114\":1}}],[\"20\",{\"1\":{\"93\":1}}],[\"2022\",{\"1\":{\"88\":1}}],[\"2020\",{\"1\":{\"60\":1}}],[\"230\",{\"1\":{\"45\":1}}],[\"253\",{\"1\":{\"45\":1}}],[\"2\",{\"0\":{\"2\":1,\"6\":1,\"7\":1,\"12\":1,\"17\":1,\"66\":1,\"70\":1,\"71\":1,\"76\":1,\"81\":1},\"1\":{\"27\":14,\"43\":1,\"95\":1}}],[\"15\",{\"1\":{\"45\":1}}],[\"138\",{\"1\":{\"45\":1}}],[\"19th\",{\"1\":{\"38\":1}}],[\"10002\",{\"1\":{\"95\":1}}],[\"10001\",{\"1\":{\"95\":1}}],[\"10000\",{\"1\":{\"95\":2}}],[\"10\",{\"1\":{\"6\":1}}],[\"1\",{\"0\":{\"1\":1,\"65\":1},\"1\":{\"27\":12,\"36\":1,\"41\":1,\"43\":1,\"60\":2,\"95\":1,\"104\":1}}],[\"香蕉\",{\"0\":{\"1\":1,\"6\":1,\"11\":1,\"16\":1},\"2\":{\"4\":1,\"9\":1,\"14\":1,\"19\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
