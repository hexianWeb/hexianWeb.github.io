const t=JSON.parse('{"key":"v-8fc6b3e2","path":"/typeScript/%E7%BB%93%E6%9E%84%E5%8C%96%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F.html","title":"阴魂不散的鸭子类型 ？","lang":"zh-CN","frontmatter":{"title":"阴魂不散的鸭子类型 ？","cover":"/assets/images/typescript.png","icon":"fa-solid fa-t","order":4,"author":"HeXianWeb","date":"2023-08-18T00:00:00.000Z","category":["TypeScript"],"tag":["TypeScript","进阶"],"sticky":false,"star":true,"description":"什么是鸭子类型？ 鸭子类型（Duck Typing）是一种动态类型语言的概念，它强调对象的行为（方法和属性）比实际类型更重要。鸭子类型的基本思想是，只要一个对象具有与所需的操作相匹配的方法和属性，那么它就可以被视为符合所需的类型，即使它的实际类型并不相同。 鸭子类型的名字来自于一句俚语：“如果它走起路来像只鸭子，叫起声来也像只鸭子，那么它就是只鸭子。”这句话强调的是，对象的行为决定了它的类型，而不是继承关系或显式的类型声明。 JavaScript 里的鸭子类型 从 JavaScript 迁移的小伙伴都知道在 JavaScript 中，如果一个对象具有与所需操作相匹配的方法和属性，那么它就可以被视为符合所需的类型，即使它的实际类型并不相同。","head":[["meta",{"property":"og:url","content":"https://hexianWeb.github.io/typeScript/%E7%BB%93%E6%9E%84%E5%8C%96%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"hexianWeb 的静态博客"}],["meta",{"property":"og:title","content":"阴魂不散的鸭子类型 ？"}],["meta",{"property":"og:description","content":"什么是鸭子类型？ 鸭子类型（Duck Typing）是一种动态类型语言的概念，它强调对象的行为（方法和属性）比实际类型更重要。鸭子类型的基本思想是，只要一个对象具有与所需的操作相匹配的方法和属性，那么它就可以被视为符合所需的类型，即使它的实际类型并不相同。 鸭子类型的名字来自于一句俚语：“如果它走起路来像只鸭子，叫起声来也像只鸭子，那么它就是只鸭子。”这句话强调的是，对象的行为决定了它的类型，而不是继承关系或显式的类型声明。 JavaScript 里的鸭子类型 从 JavaScript 迁移的小伙伴都知道在 JavaScript 中，如果一个对象具有与所需操作相匹配的方法和属性，那么它就可以被视为符合所需的类型，即使它的实际类型并不相同。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hexianWeb.github.io/assets/images/typescript.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-18T07:33:23.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"阴魂不散的鸭子类型 ？"}],["meta",{"property":"article:author","content":"HeXianWeb"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:tag","content":"进阶"}],["meta",{"property":"article:published_time","content":"2023-08-18T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-18T07:33:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"阴魂不散的鸭子类型 ？\\",\\"image\\":[\\"https://hexianWeb.github.io/assets/images/typescript.png\\"],\\"datePublished\\":\\"2023-08-18T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-18T07:33:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeXianWeb\\"}]}"]]},"headers":[{"level":2,"title":"什么是鸭子类型？","slug":"什么是鸭子类型","link":"#什么是鸭子类型","children":[{"level":3,"title":"JavaScript 里的鸭子类型","slug":"javascript-里的鸭子类型","link":"#javascript-里的鸭子类型","children":[]},{"level":3,"title":"TypeScript 里的 \\" 鸭子类型 \\"","slug":"typescript-里的-鸭子类型","link":"#typescript-里的-鸭子类型","children":[]}]}],"git":{"createdTime":1692344003000,"updatedTime":1692344003000,"contributors":[{"name":"hexianWeb","email":"2387213640@qq.com","commits":1}]},"readingTime":{"minutes":4.06,"words":1217},"filePathRelative":"typeScript/结构化类型系统.md","localizedDate":"2023年8月18日","excerpt":"<h2> 什么是鸭子类型？</h2>\\n<p>鸭子类型（Duck Typing）是一种动态类型语言的概念，它强调对象的行为（方法和属性）比实际类型更重要。鸭子类型的基本思想是，只要一个对象具有与所需的操作相匹配的方法和属性，那么它就可以被视为符合所需的类型，即使它的实际类型并不相同。</p>\\n<p>鸭子类型的名字来自于一句俚语：“如果它走起路来像只鸭子，叫起声来也像只鸭子，那么它就是只鸭子。”这句话强调的是，对象的行为决定了它的类型，而不是继承关系或显式的类型声明。</p>\\n<h3> JavaScript 里的鸭子类型</h3>\\n<p>从 JavaScript 迁移的小伙伴都知道在 JavaScript 中，如果一个对象具有与所需操作相匹配的方法和属性，那么它就可以被视为符合所需的类型，即使它的实际类型并不相同。</p>","autoDesc":true}');export{t as data};
