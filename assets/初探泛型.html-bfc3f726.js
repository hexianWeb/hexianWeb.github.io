const e=JSON.parse('{"key":"v-b46dd46e","path":"/typeScript/%E5%88%9D%E6%8E%A2%E6%B3%9B%E5%9E%8B.html","title":"初探泛型","lang":"zh-CN","frontmatter":{"title":"初探泛型","cover":"/assets/images/typescript.png","icon":"fa-solid fa-t","order":3,"author":"HeXianWeb","date":"2023-08-17T00:00:00.000Z","category":["TypeScript"],"tag":["TypeScript","进阶"],"sticky":false,"star":true,"description":"more TypeScript 中的泛型是一种强大的工具，它允许您在定义函数、类或接口时不指定具体的数据类型，而是将类型作为参数传递，以在使用时确定具体的类型。泛型使您能够编写更通用、可复用的代码，同时保持类型安全性。","head":[["meta",{"property":"og:url","content":"https://hexianWeb.github.io/typeScript/%E5%88%9D%E6%8E%A2%E6%B3%9B%E5%9E%8B.html"}],["meta",{"property":"og:site_name","content":"hexianWeb 的静态博客"}],["meta",{"property":"og:title","content":"初探泛型"}],["meta",{"property":"og:description","content":"more TypeScript 中的泛型是一种强大的工具，它允许您在定义函数、类或接口时不指定具体的数据类型，而是将类型作为参数传递，以在使用时确定具体的类型。泛型使您能够编写更通用、可复用的代码，同时保持类型安全性。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://hexianWeb.github.io/assets/images/typescript.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-21T09:14:32.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"初探泛型"}],["meta",{"property":"article:author","content":"HeXianWeb"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:tag","content":"进阶"}],["meta",{"property":"article:published_time","content":"2023-08-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-21T09:14:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初探泛型\\",\\"image\\":[\\"https://hexianWeb.github.io/assets/images/typescript.png\\"],\\"datePublished\\":\\"2023-08-17T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-21T09:14:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"HeXianWeb\\"}]}"]]},"headers":[{"level":2,"title":"泛型的概念","slug":"泛型的概念","link":"#泛型的概念","children":[]},{"level":2,"title":"真的有必要用泛型吗？","slug":"真的有必要用泛型吗","link":"#真的有必要用泛型吗","children":[]},{"level":2,"title":"泛型的用法","slug":"泛型的用法","link":"#泛型的用法","children":[{"level":3,"title":"泛型约束","slug":"泛型约束","link":"#泛型约束","children":[]},{"level":3,"title":"默认值","slug":"默认值","link":"#默认值","children":[]},{"level":3,"title":"泛型函数","slug":"泛型函数","link":"#泛型函数","children":[]},{"level":3,"title":"泛型类","slug":"泛型类","link":"#泛型类","children":[]},{"level":3,"title":"泛型接口","slug":"泛型接口","link":"#泛型接口","children":[]}]}],"git":{"createdTime":1692344003000,"updatedTime":1692609272000,"contributors":[{"name":"hexianWeb","email":"2387213640@qq.com","commits":2}]},"readingTime":{"minutes":6.09,"words":1828},"filePathRelative":"typeScript/初探泛型.md","localizedDate":"2023年8月17日","excerpt":"<p><code>more</code> TypeScript 中的泛型是一种强大的工具，它允许您在定义函数、类或接口时不指定具体的数据类型，而是将类型作为参数传递，以在使用时确定具体的类型。泛型使您能够编写更通用、可复用的代码，同时保持类型安全性。</p>\\n","autoDesc":true}');export{e as data};
